@using Coats.Crafts.Extensions
@{
    
    SiteMapNode root = SiteMap.RootNode;

    var current = SiteMap.CurrentNode;
    var nodes = new List<SiteMapNode>();
    string referrerLink = string.Empty;
    
    if (SiteMap.CurrentNode != null)
    {
        if (SiteMap.CurrentNode.ParentNode != null)
        {
            current = SiteMap.CurrentNode.ParentNode;
        }
    }


    if (current != null)
    {
        if (current.ParentNode != null)
        {
            //while (current["title"] != "Home")            
            while (current.ParentNode != null)
            {
				if (current["depth"] != "0")
				{
					nodes.Insert(0, current);
					current = current.ParentNode;
				}
            } 
        } else {
			if (current["depth"] != "0")
			{		
				nodes.Add(current);
			}
        }
    }
    
    //if (Session["SEARCH"] != null)
    //{
    //    string referrer = Session["REFERRER"].ToString();
    //    if (!referrer.Contains("search=true"))
    //    {
    //        referrerLink = referrer.Contains("?") ? referrer + "&search=true" : referrer + "?search=true";
    //    } else {
    //        referrerLink = referrer;
    //    }
    //}

    //// Tweak to clear the session if the user has navigated straight here.
    //if(HttpContext.Current.Request.UrlReferrer == null)
    //{
    //    Session.ClearReturnToSearch();
    //}
    //else
    //{
    //    bool fromFacetList = false;
    //    foreach(string segment in HttpContext.Current.Request.UrlReferrer.Segments)
    //    {
    //        if(segment.ToLower() == "discover" 
    //            || segment.ToLower() == "learn" 
    //            || segment.ToLower() == "share" 
    //            || segment.ToLower() == "product-explorer")
    //        {
    //            fromFacetList = true;
    //            break;
    //        }
    //    }
    //    if(!fromFacetList)
    //    {
    //        Session.ClearReturnToSearch();    
    //    }
    //}
    
    //bool returnToSearch = false;
    //try { returnToSearch = bool.Parse(Request.QueryString["rts"]); }
    //catch(Exception) { returnToSearch = false; }
    
    //if (returnToSearch && Session.HasReturnToSearchUrl())
    //{
    //    //try { referrerLink = HttpContext.Current.Request.UrlReferrer.AbsoluteUri.ToString() + Session.GetReturnToSearchUrl(); }
    //    try { referrerLink = Session.GetReturnToSearchUrl(); }
    //    catch (Exception) { referrerLink = string.Empty; }
    //    // Used it, now clear it!
    //    Session.ClearReturnToSearchUrl();
    //}

    try { referrerLink = Session.GetReturnToSearchUrl(Request); }
    catch (Exception) { referrerLink = string.Empty; }
    // Used it, now clear it!
    Session.ClearReturnToSearch();
        
<div class="crumbs">
    <div class="row-fluid">
        <div class="span12">

            @if (!string.IsNullOrEmpty(referrerLink))
            {
                <a href="@referrerLink" title="" class="back-to-search">@Html.GetResource("SearchResults")</a>   
            }

            @if (nodes.Count > 0)
            {
                <ul class="crumbs-list">
                @foreach (SiteMapNode node in nodes)
                {
                    if (node["breadcrumbtitle"] != "")
                    {
                        <li><a href="@Url.Content(node.Url)" title="@node["breadcrumbtitle"]">@node["breadcrumbtitle"]</a></li>
                    }
                    else
                    {
                        <li><a href="@Url.Content(node.Url)" title="@node.Title">@node.Title</a></li>
                    }
                }
                @*<li>@currentNodeTitle</li>*@
                </ul>
            }
		</div>
	</div>
</div>
    
    }