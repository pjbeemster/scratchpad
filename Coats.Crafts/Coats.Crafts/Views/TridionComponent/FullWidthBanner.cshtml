@using DD4T.ContentModel;

@model IComponentPresentation

@{
    Layout = null;
    var promo = @Model.Component.Fields;
}

<div class="component">
    <div class="row-fluid">
        <div class="span6">
            <h1>@(promo.ContainsKey("title") ? promo["title"].Value : string.Empty)</h1>
            <p>@Html.Raw((promo.ContainsKey("summary") ? promo["summary"].Value : string.Empty))</p>
            @if (promo.ContainsKey("link") && promo["link"].EmbeddedValues[0].ContainsKey("linkURL") && promo["link"].EmbeddedValues[0].ContainsKey("linkTitle"))
                {
                    <a class="btn purple" href="@promo["link"].EmbeddedValues[0]["linkURL"].Value" title="@promo["link"].EmbeddedValues[0]["linkTitle"].Value">
                        @promo["link"].EmbeddedValues[0]["linkTitle"].Value
                    </a>
                }
                else
                {
                    if (promo.ContainsKey("link") && promo["link"].EmbeddedValues[0].ContainsKey("linkComponent") && promo["link"].EmbeddedValues[0].ContainsKey("linkTitle"))
                    {
                        var link = promo["link"].EmbeddedValues[0]["linkComponent"].LinkedComponentValues[0].GetResolvedUrl();
                        if (String.IsNullOrEmpty(link))
                        {
                            link = "";
                        }
                        
                    <a class="btn purple" href="@Url.Content(link))" title="@promo["link"].EmbeddedValues[0]["linkTitle"].Value">
                        @promo["link"].EmbeddedValues[0]["linkTitle"].Value
                    </a>
                    }
                }		
            <!--<a href="#" class="btn purple">Find out more</a>-->
        </div>
        <div class="span6">
        </div>
    </div>
</div>

