@*
@using Coats.Crafts.Configuration;
@using Coats.Crafts.Extensions;

@model Coats.Crafts.Controllers.Registration
           
@{
	Layout = null;
	var returnurl = ViewBag.ReturnUrl;
	bool rememberChk = ViewBag.RememberMe != null ? ViewBag.RememberMe : false;
	bool radioSelected = false;
	string selectedRadio = string.Empty;
	int cnt = 0;
	var reg = Url.Content("~/registration/index.html");
	var postcodePlaceholder = @Html.GetResource("PostcodePlaceholder");
}
<!-- <section class="register"> -->
	<div class="row-fluid register">
		<!-- 
		<div class="span1">
		</div>
		<div class="span3">
        @using (Html.BeginForm(null, null, FormMethod.Post, new { @id = "login", @action = reg }))
		{
			@Html.ValidationSummary(false, "Please fix these errors.");
			<div class="row-fluid">
				<div class="span12">
					<fieldset>
						<legend>@Html.GetResource("SignIn")</legend>
						<div class="control-group signin">
							@Html.LabelFor(model => model.LoginForm.EmailAddress, new { @class = "required" })
							@Html.EditorFor(model => model.LoginForm.EmailAddress, new { maxlength = 255, @Value = "", @placeholder = "you@example.com", @class = "span12" })
							@Html.ValidationMessageFor(model => model.LoginForm.EmailAddress)
						</div>
						<div class="controls control-group">
							@Html.LabelFor(model => model.LoginForm.Password, new { @class = "required" })
							@Html.EditorFor(model => model.LoginForm.Password)
							@Html.ValidationMessageFor(model => model.LoginForm.Password)
						</div>
                        <div id="message">@Html.ValidationMessage("LoginFailed")</div>
						<div class="controls control-group">
							@if (!String.IsNullOrEmpty(Request.Params["action"]))
							{
								<input type="hidden" name="redirect" value="@Request.Params["redirect"]" />
								<input type="hidden" name="callbackQueryString" value="@Request.QueryString" />
							}
							<button type="submit" class="btn purple" name="button" value="Login" id="loginbutton">@Html.GetResource("Login")</button>
						</div>
                        @*<input type="hidden" id="LoginRedirect" name="LoginRedirect" />
                        <input type="hidden" id="LoginInstruction" name="LoginInstruction" />
					</fieldset>
                    <a href="@Url.Content(WebConfiguration.Current.PasswordReminderPath)" class="show-forgot-pass" class="">@Html.GetResource("ForgottenPassword")</a>                    
				</div>
			</div>
		}

        @using (Html.BeginForm(null, null, FormMethod.Post, new { @id = "passwordreminder", @action = "/PasswordReminder/index.html" }))
		{
			@Html.ValidationSummary(false, "Please fix these errors.");
		    <fieldset>
			    <legend>@Html.GetResource("ForgottenPassword")</legend>
			    <div class="control-group">
                    @Html.LabelFor(model => model.PasswordReminder.ReminderEmailAddress, new { @class = "not_required" })
                    @Html.EditorFor(model => model.PasswordReminder.ReminderEmailAddress)
                    @Html.ValidationMessageFor(model => model.PasswordReminder.ReminderEmailAddress)
			    </div>
			    <div class="controls control-group">
				    <button type="submit" class="btn purple" id="reset">@Html.GetResource("Submit")</button>
			    </div>
		    </fieldset>
            <div id="ForgottenPasswordMessage"></div>
		}

		</div>
		<div class="span1 registerdivider">
            <div class="registerdividerblock"></div>
        </div> -->
		<div class="regform">
		@using (Html.BeginForm(null, null, FormMethod.Post, new { @class = "sign-up ", @id = "registration", @action = reg }))
		{
			@Html.ValidationSummary(false, "Please fix these errors.");


				if (ViewBag.Stage == "register")
				{
															 
				<div class="one">
                    <div class="span6">
					    <div class="row-fluid">
						<div class="span12">
							<fieldset>
								<legend>@Html.GetResource("SignUpForAccess")</legend>
								<p>@Html.GetResource("SignUpIntro")</p>
								<div class="row-fluid">
								<div class="span12 controls control-group border-top">
									@Html.LabelFor(m => m.RegistrationForm.CustomerDetails.EmailAddress, new { @class = "not_required" })
									@Html.TextBoxFor(m => m.RegistrationForm.CustomerDetails.EmailAddress, new { @maxlength = 255, @placeholder = "Email address", @class = "input-block-level" })
									@Html.ValidationMessageFor(m => m.RegistrationForm.CustomerDetails.EmailAddress)
								</div>
								</div>
								<div class="row-fluid">
									<div class="span6 control-group">
										@Html.LabelFor(m => m.RegistrationForm.CustomerDetails.FirstName, new { @class = "not_required" })
										@Html.TextBoxFor(m => m.RegistrationForm.CustomerDetails.FirstName, new { maxlength = 255, @Value = "", @class = "span12", @placeholder = "First name" })
										@Html.ValidationMessageFor(m => m.RegistrationForm.CustomerDetails.FirstName)
										<span class="help-inline">@Html.ValidationMessage("RegistrationErrorFirstName")</span>
									</div>
									<div class="span6 control-group">
										@Html.LabelFor(m => m.RegistrationForm.CustomerDetails.LastName, new { @class = "not_required" })
										@Html.TextBoxFor(m => m.RegistrationForm.CustomerDetails.LastName, new { maxlength = 255, @Value = "", @class = "span12", @placeholder = "Last name" })
										@Html.ValidationMessageFor(m => m.RegistrationForm.CustomerDetails.LastName)
										<span class="help-inline">@Html.ValidationMessage("RegistrationErrorLastName")</span>
									</div>
								</div>
								<div class="controls control-group">
									@Html.LabelFor(m => m.RegistrationForm.CustomerDetails.DisplayName, new { @class = "not_required" })
									@Html.TextBoxFor(m => m.RegistrationForm.CustomerDetails.DisplayName, new { maxlength = 255, @Value = "", @class = "span12", @placeholder = "Display name" })
									@Html.ValidationMessageFor(m => m.RegistrationForm.CustomerDetails.DisplayName)
									<span class="help-inline">@Html.ValidationMessage("RegistrationErrorDisplayName")</span>
								</div>
								<div class="row-fluid">
									<div class="span6 control-group">
										@Html.LabelFor(m => m.RegistrationForm.CustomerDetails.Password, new { @class = "not_required" })
										@Html.PasswordFor(m => m.RegistrationForm.CustomerDetails.Password, new { maxlength = 255, @Value = "", @class = "span12", @placeholder = "Password" })
										@Html.ValidationMessageFor(m => m.RegistrationForm.CustomerDetails.Password)
										<span class="help-inline">@Html.ValidationMessage("RegistrationErrorPassword")</span>
									</div>
									<div class="span6 control-group">
										@Html.LabelFor(m => m.RegistrationForm.CustomerDetails.VerifyPassword, new { @class = "not_required" })
										@Html.PasswordFor(m => m.RegistrationForm.CustomerDetails.VerifyPassword, new { maxlength = 255, @Value = "", @class = "span12", @placeholder = "Confirm password" })
										@Html.ValidationMessageFor(m => m.RegistrationForm.CustomerDetails.VerifyPassword)
										<span class="help-inline">@Html.ValidationMessage("RegistrationErrorVerifyPassword")</span>
									</div>
								</div>
								<div class="controls control-group">
									<input type="hidden" name="Stage" value="register" />
									<input type="submit" class="btn purple" value="Register" />
									@Html.ValidationMessage("RegistrationErrorSummary")
								</div>
							</fieldset>
						</div>
					</div>
                    </div>
				</div>
				}
				else if (ViewBag.Stage == "preferences")
				{
				<div class="two">
                    <div class="span12">
				    	<div class="row-fluid">
						<div class="span1"></div>
                        <div class="span10">
							<legend>@Html.GetResource("TaylorYourExperience")</legend>
						</div>
                        <div class="span1"></div>
					</div>
			    		<div class="row-fluid">
                        <div class="span1"></div>
                        <div class="span4">
                            
							<legend class="small">@Html.GetResource("YourLocation")</legend>
							<div class="postcode controls">
								@Html.LabelFor(m => m.RegistrationForm.AddressDetails.Postcode, new { @class = "not_required" })
								@Html.TextBoxFor(m => m.RegistrationForm.AddressDetails.Postcode, new { maxlength = 255, @class = "span8", @placeholder = postcodePlaceholder, @autocomplete = "off" })
								@Html.ValidationMessageFor(m => m.RegistrationForm.AddressDetails.Postcode)
								<span class="help-inline">@Html.ValidationMessage("RegistrationErrorPassword")</span>
								<input type="hidden" id="lat" name="lat" />
								<input type="hidden" id="long" name="long" />
								<input type="hidden" id="RegistrationStatus" name="RegistrationStatus" />
                                <input type="hidden" id="RegistrationRedirect" name="RegistrationRedirect" />
                                <input type="hidden" id="RegistrationInstruction" name="RegistrationInstruction" />
							</div>
							<fieldset>
								<legend class="small">@Html.GetResource("MyPreferredCrafts")</legend>
								<div class="control-group">
									<div class="controls span6">
										@Html.CheckBoxList("CraftType", Model.RegistrationForm.CraftTypeList, new HtmlListInfo(HtmlTag.ul, 0, new { @class = "check-horz" }))
									</div>
								</div>
							</fieldset>
							<fieldset>
								<legend class="small">@Html.GetResource("EmailNewsletter")</legend>
								<div class="control-group">
									<ul class="check-horz">
									@foreach (var item in Model.RegistrationForm.EmailNewsletter)
		 {
			 cnt++;
			 selectedRadio = "";
			 if (item.Selected)
			 {
				 selectedRadio = "checked";
				 radioSelected = true;
			 }
			 if (cnt == Model.RegistrationForm.EmailNewsletter.Count && radioSelected == false)
			 {
				 selectedRadio = "checked";
			 }
										<li>
											<input type="radio" name="email-newsletter" id="email-newsletter-@item.Text" value="@item.Value" @selectedRadio />
										    <label for="email-newsletter-@item.Text">@item.Text</label>
										</li>
		 }
									</ul>
								</div>
							</fieldset>
						</div>
						<div class="span6">
							<div id="geolocation-canvas">
							</div>
                            <div class="controls controls-row control-group pull-right">
								<input type="hidden" name="Stage" value="preferences" />
								<input type="submit" class="btn purple" value="Set preferences" />
							</div>
						</div>
                        <div class="span1"></div>
					</div>
                    </div>
				</div>
				}
				else if (ViewBag.Stage == "profile")
				{
				<div class="three">
                    <div class="span12">
					    <div class="row-fluid">
                        <div class="span1"></div>
                        <div class="span10">
							<legend>@Html.GetResource("StartToCreateAProfile")</legend>
						</div>
                        <div class="span1"></div>
					</div>
    					<div class="row-fluid">
                        <div class="span1"></div>
						<div class="span6 registeraboutpanel">
							<div class="controls control-group">
								@Html.LabelFor(m => m.RegistrationForm.CustomerDetails.About, new { @class = "not_required" })
								@Html.TextAreaFor(m => m.RegistrationForm.CustomerDetails.About, new { maxlength = 255, @Value = "" })
								@Html.ValidationMessageFor(m => m.RegistrationForm.CustomerDetails.About)
							</div>
						</div>
						<div class="span4">
							<div class="controls control-group">
								<fieldset>
									<legend class="small">@Html.GetResource("ProfileVisibleInstruction")</legend>
									<ul class="check-horz">
									@{
		                             cnt = 0;
		                             foreach (var item in Model.RegistrationForm.ProfileVisible)
		                             {
			                             cnt++;
			                             selectedRadio = "";
			                             if (item.Selected)
			                             {
				                             selectedRadio = "checked";
				                             radioSelected = true;
			                             }
			                             if (cnt == Model.RegistrationForm.EmailNewsletter.Count && radioSelected == false)
			                             {
				                             selectedRadio = "checked";
			                             }  
										<li>
										<input type="radio" name="visibile-profile" id="visibile-profile-@item.Text" value="@item.Value" @selectedRadio /><label for="visibile-profile-@item.Text">@item.Text</label>
										</li>
		                                }
                                    }
									</ul>
								</fieldset>
							</div>
						</div>
                        <div class="span1"></div>
					</div>
	    				<div class="row-fluid">
						<div class="span1"></div>
                        <div class="span10 text-right">
							<div class="controls controls-row control-group pull-right">
								@if (!String.IsNullOrEmpty(Request.Params["action"]))
								{
									<input type="hidden" name="redirect" value="@Request.Params["redirect"]" />
									<input type="hidden" name="callbackQueryString" value="@Request.QueryString" />
								}
								<input type="hidden" name="Stage" value="profile" />
								<input type="submit" class="btn purple" value="Save profile" />
							</div>
						</div>
                        <div class="span1"></div>
					</div>
                    </div>
				</div>
				}
				else if (ViewBag.Stage == "complete")
				{
					<h1>Job done.</h1>
				}
			}
		</div>
		<div class="span1"></div>
	</div>
<!-- </section> -->
@Html.ValidationMessage("validationError")
*@