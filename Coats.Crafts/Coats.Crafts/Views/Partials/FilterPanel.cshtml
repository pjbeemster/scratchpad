@using System.Text;
@using Coats.Crafts.Filters;

@model Coats.Crafts.Models.FacetedContentBase

@{
    string watermarkId = Request.Url.AbsolutePath.Contains("/explore") ? "SearchProductsWatermark" : "SearchWatermark";
    string placeholderText = Html.GetResource(watermarkId);

    string ticked = String.Empty;
    if (!String.IsNullOrEmpty(Request["fh_ticked"]))
    {
        ticked = "?fh_ticked=" + Request["fh_ticked"];
    }
}		   

@helper WriteChildren(Coats.Crafts.Models.FacetSection childSection)
	{
	Boolean containsSelectedChild = false;

    <ul>
    @foreach (var childFacet in childSection.Facets)
	{
        //var cTitle = Html.GetResource("ShowMe") + " " + Html.GetResource("labels/categories.resx", childFacet.FHId);
        var cTitle = Html.GetResource("ShowMe") + " " + childFacet.Text;
		var cHref = childFacet.Value;
		String cFacetClass = String.Empty;

		if (childFacet.Selected)
		{
			cFacetClass = "selected";
			containsSelectedChild = true;
		}
                                         
        @*<li class="@(containsSelectedChild ? "" : "closed")"> <a href="@cHref" title="@cTitle" class="@cFacetClass" rel="nofollow"><span></span>@Html.GetResource("labels/categories.resx", @childFacet.FHId)</a>*@
        <li class="@(containsSelectedChild ? "" : "closed")"> <a href="@cHref" title="@cTitle" class="@cFacetClass" rel="nofollow"><span></span>@childFacet.Text</a>
            @if (childFacet.childSection != null)
			{
                @WriteChildren(childFacet.childSection);
			}
        </li>
	}
    </ul>
}

<div class="filter-panel">
    <div>
        <a href="#" class="icon close small" title="@Html.GetResource("HideFilterPanel")" rel="nofollow">Close</a>
        <h1>@Html.GetResource("FilterBy"):</h1>
    </div>
	<div class="facet search">

    
		<form action="@ticked" class="fh-filter" method="post">
			@*@Html.TextBoxFor(m => m.ComponentSection.SearchTerm, new { type = "search", placeholder = Html.GetResource("SearchProductsWatermark") })*@
            @Html.TextBoxFor(m => m.ComponentSection.SearchTerm, new { type = "search", placeholder = placeholderText })
			<input type="image" src="@Url.Content("~/img/input-search-icon.png")" />
			@*
			
			/*
			 * 
			 * Hidden fields required existing logic in the controller to work
			 * 
			 */

			*@
			@Html.HiddenFor(m => m.FredHopperLocation)
			@Html.HiddenFor(m => m.Sort.SortBy)
			@Html.HiddenFor(m => m.Sort.ActiveDiscussions)
			@for (int i = 0; i < Model.ComponentSection.ComponentTypes.Facets.Count; i++)
			{
				@Html.HiddenFor(m => m.ComponentSection.ComponentTypes.Facets[i].Text)
				@Html.HiddenFor(m => m.ComponentSection.ComponentTypes.Facets[i].Value)
				@Html.HiddenFor(m => m.ComponentSection.ComponentTypes.Facets[i].Href)
				@Html.HiddenFor(m => m.ComponentSection.ComponentTypes.Facets[i].Selected)
			}
		</form>
	</div>
	@if(Model.Sort.ActiveDiscussionsEnabled)
    {
        <div class="facet discussions">
		    <form action="@ticked" class="fh-filter" method="post">
			    @Html.CheckBoxFor(m => m.Sort.ActiveDiscussions, new { id="filterAD" })
			    <label for="filterAD">@Html.GetResource("ActiveDiscussions")</label>
			    @*
			
			    /*
			     * 
			     * Hidden fields required existing logic in the controller to work
			     * 
			     */

			    *@
			    @Html.HiddenFor(m => m.FredHopperLocation)
			    @Html.HiddenFor(m => m.Sort.SortBy)
			    @Html.HiddenFor(m => m.ComponentSection.SearchTerm)
			    @for (int i = 0; i < Model.ComponentSection.ComponentTypes.Facets.Count; i++)
			    {
				    @Html.HiddenFor(m => m.ComponentSection.ComponentTypes.Facets[i].Text)
				    @Html.HiddenFor(m => m.ComponentSection.ComponentTypes.Facets[i].Value)
				    @Html.HiddenFor(m => m.ComponentSection.ComponentTypes.Facets[i].Href)
				    @Html.HiddenFor(m => m.ComponentSection.ComponentTypes.Facets[i].Selected)
			    }
	        </form>
	    </div>
    }
    <div class="reset">
        <ul>
            <li><a href="@Model.FacetMap.ResetFacetsUrl" title="@Html.GetResource("ResetFilters")" rel="nofollow" id="reset-filters">@Html.GetResource("ResetFilters")</a></li>
        </ul>
    </div>
    <div class="custom-scroller">
    
    @if (Model != null && Model.FacetMap.FacetSections != null && Model.FacetMap.FacetSections.Count > 0)
	{
		for (var i = 0; i < Model.FacetMap.FacetSections.Count; i++)
		{            
			var facetSection = Model.FacetMap.FacetSections[i];
            if (!facetSection.Visible)
            {
                continue;
            }
            
			StringBuilder listItems = new StringBuilder();
			Boolean containsSelected = false;

			foreach (var facet in facetSection.Facets)
			{
				if (facet.Selected)
				{
					containsSelected = true;
				}
			}
                        
            <div class="facet">
                @*<h2 class="@(containsSelected ? "" : "closed")">@Html.GetResource("labels/categories.resx", @facetSection.SectionTitle)<span></span></h2>*@
                <h2 class="@(containsSelected ? "" : "closed")"><a class="filter-title" href="#">@facetSection.SectionTitle<span></span></a></h2>
                <ul>
                    @foreach (var facet in facetSection.Facets)
					{
                        //if brand Filter is on, only show those that start with the attribute value
                        if (ViewContext.RouteData.Values.IsLevel1BrandFilterActivated())
                        {
                            // Is this for the brand facet?
                            if (facetSection.on == ViewContext.RouteData.Values.GetLevel1BrandFacet())
                            {
                                // If we're in brand and the value dont start with the facet value, dont show
                                if (!facet.FHId.StartsWith(ViewContext.RouteData.Values.GetLevel1BrandFacetValueDelimeted()))
                                {
                                    continue;
                                }
                            }                               
                        }
                                                              
                        //var title = Html.GetResource("ShowMe") + " " + Html.GetResource("labels/categories.resx", facet.FHId);
                        var title = Html.GetResource("ShowMe") + " " + facet.Text;
						var href = facet.Value;
						String facetClass = String.Empty;

						if (facet.Selected)
						{
							facetClass = "selected";
						}
                        @*<li><a href="@href" title="@title" class="@facetClass" rel="nofollow"><span></span>@Html.GetResource("labels/categories.resx", @facet.FHId)</a>*@
                        <li><a href="@href" title="@title" class="@facetClass" rel="nofollow"><span></span>@facet.Text</a>
                            @if (facet.childSection != null)
							{
                                @WriteChildren(facet.childSection);
							}
                        </li>
					}
                </ul>
            </div>
		}
	}
    </div>

</div>
<div class="show-filter">
    <a title="Show filter panel" rel="nofollow"></a>
</div>