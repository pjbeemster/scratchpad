@using Coats.Crafts.Configuration;
@using Coats.Crafts.ConfigurationHelpers;
@using DD4T.ContentModel;
@using DD4T.Mvc.Html;
@using Coats.Crafts.Models;
@using System.Text;

@model IComponent

@{
	Layout = null;

	IFieldSet fields = Model.Fields;

	var webConf = WebConfiguration.Current;

	string schema = Model.Schema.Title.ToLower();
	string imageUrl = String.Empty;
	string type = String.Empty;
	string returnUrl = Request.Url.ToString();


	// Get thumbnail
	if (fields.ContainsKey("thumbnail"))
	{
		imageUrl = fields["thumbnail"].LinkedComponentValues[0].Multimedia.Url;
	}
	else if (fields.ContainsKey("thumb"))
	{
		imageUrl = fields["thumb"].LinkedComponentValues[0].Multimedia.Url;
	}


	// Get summary
	string description = (fields.ContainsKey("summary") ? fields["summary"].Values[0] : String.Empty);

	// Get link
	string sourceUrl = (!String.IsNullOrEmpty(Model.Url)) ? Url.Content(Model.Url) : Request.Url.ToString();
    
    if (!sourceUrl.StartsWith("http"))
    {
        sourceUrl = Request.Url.GetLeftPart(UriPartial.Authority) + sourceUrl;
    }

	// Get link text
	string sourceDescription = (fields.ContainsKey("title") ? fields["title"].Value : String.Empty);

	// Get content type
	if (webConf.ContentTypeArticle.Match(schema))
	{
		type = webConf.ContentTypeArticleTitle;
	}
	else if (webConf.ContentTypeProject.Match(schema))
	{
		type = webConf.ContentTypeProjectTitle;
	}
	else if (webConf.ContentTypeMoodboard.Match(schema))
	{
		type = webConf.ContentTypeMoodboardTitle;
	}
	else if (webConf.ContentTypeDesigner.Match(schema))
	{
		type = webConf.ContentTypeDesignerTitle;
	}
	else if (webConf.ContentTypeTutorial.Match(schema))
	{
		type = webConf.ContentTypeTutorialTitle;
	}
	else if (webConf.ContentTypeCareRepair.Match(schema))
	{
		type = webConf.ContentTypeCareRepairTitle;
	}
	else if (webConf.ContentTypeFAQ.Match(schema))
	{
		type = webConf.ContentTypeFAQTitle;
	}
	else if (webConf.ContentTypeBlog.Match(schema))
	{
		type = webConf.ContentTypeBlogTitle;
	}
	else if (webConf.ContentTypeEvent.Match(schema))
	{
		type = webConf.ContentTypeEventTitle;
	}
	else if (webConf.ContentTypeBrand.Match(schema))
	{
		type = webConf.ContentTypeBrandTitle;
	}
	else if (webConf.ContentTypeProduct.Match(schema))
	{
		type = webConf.ContentTypeProductTitle;
	}

	// Set fields for image
	if (schema == "generic.image")
	{
		imageUrl = Url.Content(Model.Multimedia.Url);
        description = Model.MetadataFields.ContainsKey("alt") ? Model.MetadataFields["alt"].Value : "";
		sourceUrl = Request.Url.ToString();
		sourceDescription = Request.Url.ToString();
		type = "Image";
	}
    
    if (string.IsNullOrEmpty(description))
    {
        description = type;
    }
}

@if (User.Identity.IsAuthenticated)
{
	using (Html.BeginForm("AddItem", "Scrapbook", FormMethod.Post, new { @class = "AddExternalItem", rel = "ajax", data_done_event = "inserted-scrapbook" }))
	{
		@Html.ValidationSummary(false)
		<input type="hidden" name="imageUrl" value="@(imageUrl)" />
		<input type="hidden" name="description" value="@(Html.StripHtml(description))" />
		<input type="hidden" name="sourceUrl" value="@(sourceUrl)" />
		<input type="hidden" name="sourceDescription" value="@(Html.StripHtml(sourceDescription))" />
		<input type="hidden" name="type" value="@(type)" />
		<input type="hidden" name="returnUrl" value="@(returnUrl)" />
        <button type="submit" class="icon scrapbook" title="@Html.GetResource("AddToScrapBook")">@Html.GetResource("AddToScrapBook")</button>
	}
}
else
{
	// Append item details to query string to pass through to login form - login form then adds these as hidden values
	StringBuilder link = new StringBuilder("~/registration/index.html");
	link.Append("?action=addtoscrapbook");
	link.Append("&imageUrl=" + Url.Encode(imageUrl));
	link.Append("&description=" + Url.Encode(Html.StripHtml(description)));
	link.Append("&sourceUrl=" + Url.Encode(sourceUrl));
	link.Append("&sourceDescription=" + Url.Encode(Html.StripHtml(sourceDescription)));
	link.Append("&type=" + Url.Encode(type));
	link.Append("&ReturnUrl=" + Url.Encode(Request.Url.AbsolutePath));
	
	<a href="@Url.Content(link.ToString())" class="icon scrapbook" title="@Html.GetResource("AddToScrapBook")" rel="nofollow">@Html.GetResource("AddToScrapBook")</a>
}