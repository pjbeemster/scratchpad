//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18444
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Coats.Crafts.Gateway.CraftsIntegrationService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="IntegrationServiceRetailer", Namespace="http://schemas.datacontract.org/2004/07/Coats.Crafts.IntegrationService.DataContr" +
        "acts")]
    [System.SerializableAttribute()]
    public partial class IntegrationServiceRetailer : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BrandsStockedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ContactEmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ContactNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ContactTelephoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CountryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double DistanceFromPointField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Coats.Crafts.Gateway.CraftsIntegrationService.CraftsEvent[] EventsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool HasPromotionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ItemIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LatitudeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LongitudeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PostCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PublicationIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RetailerNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RoadNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SiteUrlField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TownField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BrandsStocked {
            get {
                return this.BrandsStockedField;
            }
            set {
                if ((object.ReferenceEquals(this.BrandsStockedField, value) != true)) {
                    this.BrandsStockedField = value;
                    this.RaisePropertyChanged("BrandsStocked");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ContactEmail {
            get {
                return this.ContactEmailField;
            }
            set {
                if ((object.ReferenceEquals(this.ContactEmailField, value) != true)) {
                    this.ContactEmailField = value;
                    this.RaisePropertyChanged("ContactEmail");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ContactName {
            get {
                return this.ContactNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ContactNameField, value) != true)) {
                    this.ContactNameField = value;
                    this.RaisePropertyChanged("ContactName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ContactTelephone {
            get {
                return this.ContactTelephoneField;
            }
            set {
                if ((object.ReferenceEquals(this.ContactTelephoneField, value) != true)) {
                    this.ContactTelephoneField = value;
                    this.RaisePropertyChanged("ContactTelephone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Country {
            get {
                return this.CountryField;
            }
            set {
                if ((object.ReferenceEquals(this.CountryField, value) != true)) {
                    this.CountryField = value;
                    this.RaisePropertyChanged("Country");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double DistanceFromPoint {
            get {
                return this.DistanceFromPointField;
            }
            set {
                if ((this.DistanceFromPointField.Equals(value) != true)) {
                    this.DistanceFromPointField = value;
                    this.RaisePropertyChanged("DistanceFromPoint");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Coats.Crafts.Gateway.CraftsIntegrationService.CraftsEvent[] Events {
            get {
                return this.EventsField;
            }
            set {
                if ((object.ReferenceEquals(this.EventsField, value) != true)) {
                    this.EventsField = value;
                    this.RaisePropertyChanged("Events");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool HasPromotion {
            get {
                return this.HasPromotionField;
            }
            set {
                if ((this.HasPromotionField.Equals(value) != true)) {
                    this.HasPromotionField = value;
                    this.RaisePropertyChanged("HasPromotion");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ItemId {
            get {
                return this.ItemIdField;
            }
            set {
                if ((this.ItemIdField.Equals(value) != true)) {
                    this.ItemIdField = value;
                    this.RaisePropertyChanged("ItemId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Latitude {
            get {
                return this.LatitudeField;
            }
            set {
                if ((object.ReferenceEquals(this.LatitudeField, value) != true)) {
                    this.LatitudeField = value;
                    this.RaisePropertyChanged("Latitude");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Longitude {
            get {
                return this.LongitudeField;
            }
            set {
                if ((object.ReferenceEquals(this.LongitudeField, value) != true)) {
                    this.LongitudeField = value;
                    this.RaisePropertyChanged("Longitude");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PostCode {
            get {
                return this.PostCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.PostCodeField, value) != true)) {
                    this.PostCodeField = value;
                    this.RaisePropertyChanged("PostCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PublicationId {
            get {
                return this.PublicationIdField;
            }
            set {
                if ((this.PublicationIdField.Equals(value) != true)) {
                    this.PublicationIdField = value;
                    this.RaisePropertyChanged("PublicationId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RetailerName {
            get {
                return this.RetailerNameField;
            }
            set {
                if ((object.ReferenceEquals(this.RetailerNameField, value) != true)) {
                    this.RetailerNameField = value;
                    this.RaisePropertyChanged("RetailerName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RoadName {
            get {
                return this.RoadNameField;
            }
            set {
                if ((object.ReferenceEquals(this.RoadNameField, value) != true)) {
                    this.RoadNameField = value;
                    this.RaisePropertyChanged("RoadName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SiteUrl {
            get {
                return this.SiteUrlField;
            }
            set {
                if ((object.ReferenceEquals(this.SiteUrlField, value) != true)) {
                    this.SiteUrlField = value;
                    this.RaisePropertyChanged("SiteUrl");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Town {
            get {
                return this.TownField;
            }
            set {
                if ((object.ReferenceEquals(this.TownField, value) != true)) {
                    this.TownField = value;
                    this.RaisePropertyChanged("Town");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CraftsEvent", Namespace="http://schemas.datacontract.org/2004/07/Coats.Crafts.IntegrationService.DataContr" +
        "acts")]
    [System.SerializableAttribute()]
    public partial class CraftsEvent : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CountryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double DistanceFromPointField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime EventDateEndField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime EventDateStartField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EventDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EventNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ItemIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LatitudeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LongitudeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PostCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PublicationIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.TimeSpan RecuringAtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RecuringDaysField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RetailerItemIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RetailerPublicationIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RoadNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ThumbnailUrlField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TownField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string URLField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool UseEndTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool UseStartTimeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Country {
            get {
                return this.CountryField;
            }
            set {
                if ((object.ReferenceEquals(this.CountryField, value) != true)) {
                    this.CountryField = value;
                    this.RaisePropertyChanged("Country");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double DistanceFromPoint {
            get {
                return this.DistanceFromPointField;
            }
            set {
                if ((this.DistanceFromPointField.Equals(value) != true)) {
                    this.DistanceFromPointField = value;
                    this.RaisePropertyChanged("DistanceFromPoint");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime EventDateEnd {
            get {
                return this.EventDateEndField;
            }
            set {
                if ((this.EventDateEndField.Equals(value) != true)) {
                    this.EventDateEndField = value;
                    this.RaisePropertyChanged("EventDateEnd");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime EventDateStart {
            get {
                return this.EventDateStartField;
            }
            set {
                if ((this.EventDateStartField.Equals(value) != true)) {
                    this.EventDateStartField = value;
                    this.RaisePropertyChanged("EventDateStart");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EventDescription {
            get {
                return this.EventDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.EventDescriptionField, value) != true)) {
                    this.EventDescriptionField = value;
                    this.RaisePropertyChanged("EventDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EventName {
            get {
                return this.EventNameField;
            }
            set {
                if ((object.ReferenceEquals(this.EventNameField, value) != true)) {
                    this.EventNameField = value;
                    this.RaisePropertyChanged("EventName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ItemId {
            get {
                return this.ItemIdField;
            }
            set {
                if ((this.ItemIdField.Equals(value) != true)) {
                    this.ItemIdField = value;
                    this.RaisePropertyChanged("ItemId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Latitude {
            get {
                return this.LatitudeField;
            }
            set {
                if ((object.ReferenceEquals(this.LatitudeField, value) != true)) {
                    this.LatitudeField = value;
                    this.RaisePropertyChanged("Latitude");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Longitude {
            get {
                return this.LongitudeField;
            }
            set {
                if ((object.ReferenceEquals(this.LongitudeField, value) != true)) {
                    this.LongitudeField = value;
                    this.RaisePropertyChanged("Longitude");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PostCode {
            get {
                return this.PostCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.PostCodeField, value) != true)) {
                    this.PostCodeField = value;
                    this.RaisePropertyChanged("PostCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PublicationId {
            get {
                return this.PublicationIdField;
            }
            set {
                if ((this.PublicationIdField.Equals(value) != true)) {
                    this.PublicationIdField = value;
                    this.RaisePropertyChanged("PublicationId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.TimeSpan RecuringAt {
            get {
                return this.RecuringAtField;
            }
            set {
                if ((this.RecuringAtField.Equals(value) != true)) {
                    this.RecuringAtField = value;
                    this.RaisePropertyChanged("RecuringAt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RecuringDays {
            get {
                return this.RecuringDaysField;
            }
            set {
                if ((object.ReferenceEquals(this.RecuringDaysField, value) != true)) {
                    this.RecuringDaysField = value;
                    this.RaisePropertyChanged("RecuringDays");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RetailerItemId {
            get {
                return this.RetailerItemIdField;
            }
            set {
                if ((this.RetailerItemIdField.Equals(value) != true)) {
                    this.RetailerItemIdField = value;
                    this.RaisePropertyChanged("RetailerItemId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RetailerPublicationId {
            get {
                return this.RetailerPublicationIdField;
            }
            set {
                if ((this.RetailerPublicationIdField.Equals(value) != true)) {
                    this.RetailerPublicationIdField = value;
                    this.RaisePropertyChanged("RetailerPublicationId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RoadName {
            get {
                return this.RoadNameField;
            }
            set {
                if ((object.ReferenceEquals(this.RoadNameField, value) != true)) {
                    this.RoadNameField = value;
                    this.RaisePropertyChanged("RoadName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ThumbnailUrl {
            get {
                return this.ThumbnailUrlField;
            }
            set {
                if ((object.ReferenceEquals(this.ThumbnailUrlField, value) != true)) {
                    this.ThumbnailUrlField = value;
                    this.RaisePropertyChanged("ThumbnailUrl");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Town {
            get {
                return this.TownField;
            }
            set {
                if ((object.ReferenceEquals(this.TownField, value) != true)) {
                    this.TownField = value;
                    this.RaisePropertyChanged("Town");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string URL {
            get {
                return this.URLField;
            }
            set {
                if ((object.ReferenceEquals(this.URLField, value) != true)) {
                    this.URLField = value;
                    this.RaisePropertyChanged("URL");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool UseEndTime {
            get {
                return this.UseEndTimeField;
            }
            set {
                if ((this.UseEndTimeField.Equals(value) != true)) {
                    this.UseEndTimeField = value;
                    this.RaisePropertyChanged("UseEndTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool UseStartTime {
            get {
                return this.UseStartTimeField;
            }
            set {
                if ((this.UseStartTimeField.Equals(value) != true)) {
                    this.UseStartTimeField = value;
                    this.RaisePropertyChanged("UseStartTime");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ScrapbookItem", Namespace="http://schemas.datacontract.org/2004/07/Coats.Crafts.IntegrationService.DataContr" +
        "acts")]
    [System.SerializableAttribute()]
    public partial class ScrapbookItem : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime AddedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ImageURLField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ItemDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ItemTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SourceDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SourceURLField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime AddedDate {
            get {
                return this.AddedDateField;
            }
            set {
                if ((this.AddedDateField.Equals(value) != true)) {
                    this.AddedDateField = value;
                    this.RaisePropertyChanged("AddedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ImageURL {
            get {
                return this.ImageURLField;
            }
            set {
                if ((object.ReferenceEquals(this.ImageURLField, value) != true)) {
                    this.ImageURLField = value;
                    this.RaisePropertyChanged("ImageURL");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ItemDescription {
            get {
                return this.ItemDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.ItemDescriptionField, value) != true)) {
                    this.ItemDescriptionField = value;
                    this.RaisePropertyChanged("ItemDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ItemType {
            get {
                return this.ItemTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.ItemTypeField, value) != true)) {
                    this.ItemTypeField = value;
                    this.RaisePropertyChanged("ItemType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SourceDescription {
            get {
                return this.SourceDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.SourceDescriptionField, value) != true)) {
                    this.SourceDescriptionField = value;
                    this.RaisePropertyChanged("SourceDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SourceURL {
            get {
                return this.SourceURLField;
            }
            set {
                if ((object.ReferenceEquals(this.SourceURLField, value) != true)) {
                    this.SourceURLField = value;
                    this.RaisePropertyChanged("SourceURL");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserID {
            get {
                return this.UserIDField;
            }
            set {
                if ((object.ReferenceEquals(this.UserIDField, value) != true)) {
                    this.UserIDField = value;
                    this.RaisePropertyChanged("UserID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ShoppingListItem", Namespace="http://schemas.datacontract.org/2004/07/Coats.Crafts.IntegrationService.DataContr" +
        "acts")]
    [System.SerializableAttribute()]
    public partial class ShoppingListItem : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime AddedDateTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BrandField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProductNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProductTcmIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProjectNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int QuantityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime AddedDateTime {
            get {
                return this.AddedDateTimeField;
            }
            set {
                if ((this.AddedDateTimeField.Equals(value) != true)) {
                    this.AddedDateTimeField = value;
                    this.RaisePropertyChanged("AddedDateTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Brand {
            get {
                return this.BrandField;
            }
            set {
                if ((object.ReferenceEquals(this.BrandField, value) != true)) {
                    this.BrandField = value;
                    this.RaisePropertyChanged("Brand");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProductName {
            get {
                return this.ProductNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ProductNameField, value) != true)) {
                    this.ProductNameField = value;
                    this.RaisePropertyChanged("ProductName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProductTcmID {
            get {
                return this.ProductTcmIDField;
            }
            set {
                if ((object.ReferenceEquals(this.ProductTcmIDField, value) != true)) {
                    this.ProductTcmIDField = value;
                    this.RaisePropertyChanged("ProductTcmID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProjectName {
            get {
                return this.ProjectNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ProjectNameField, value) != true)) {
                    this.ProjectNameField = value;
                    this.RaisePropertyChanged("ProjectName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Quantity {
            get {
                return this.QuantityField;
            }
            set {
                if ((this.QuantityField.Equals(value) != true)) {
                    this.QuantityField = value;
                    this.RaisePropertyChanged("Quantity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserID {
            get {
                return this.UserIDField;
            }
            set {
                if ((object.ReferenceEquals(this.UserIDField, value) != true)) {
                    this.UserIDField = value;
                    this.RaisePropertyChanged("UserID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="CraftsIntegrationService.ICoatsCraftsIntegrationServiceContract")]
    public interface ICoatsCraftsIntegrationServiceContract {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICoatsCraftsIntegrationServiceContract/GetRetailersAndEventsPa" +
            "ged", ReplyAction="http://tempuri.org/ICoatsCraftsIntegrationServiceContract/GetRetailersAndEventsPa" +
            "gedResponse")]
        Coats.Crafts.Gateway.CraftsIntegrationService.IntegrationServiceRetailer[] GetRetailersAndEventsPaged(int publicationId, int pageSize, int pageNumber, System.DateTime currentDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICoatsCraftsIntegrationServiceContract/GetRetailersAndEventsIn" +
            "Area", ReplyAction="http://tempuri.org/ICoatsCraftsIntegrationServiceContract/GetRetailersAndEventsIn" +
            "AreaResponse")]
        Coats.Crafts.Gateway.CraftsIntegrationService.IntegrationServiceRetailer[] GetRetailersAndEventsInArea(int publicationId, string longitude, string latitude, int radius, System.DateTime currentDate, bool useMilesAsUnit, int maxEvents, int maxRetailers, string filterByBrandName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICoatsCraftsIntegrationServiceContract/GetRetailersInArea", ReplyAction="http://tempuri.org/ICoatsCraftsIntegrationServiceContract/GetRetailersInAreaRespo" +
            "nse")]
        Coats.Crafts.Gateway.CraftsIntegrationService.IntegrationServiceRetailer[] GetRetailersInArea(int publicationId, string longitude, string latitude, int radius, bool useMilesAsUnit, int maxResults);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICoatsCraftsIntegrationServiceContract/GetEventsForRetailer", ReplyAction="http://tempuri.org/ICoatsCraftsIntegrationServiceContract/GetEventsForRetailerRes" +
            "ponse")]
        Coats.Crafts.Gateway.CraftsIntegrationService.IntegrationServiceRetailer GetEventsForRetailer(Coats.Crafts.Gateway.CraftsIntegrationService.IntegrationServiceRetailer retailer, System.DateTime currentDate, int maxResults);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICoatsCraftsIntegrationServiceContract/GetEventsInArea", ReplyAction="http://tempuri.org/ICoatsCraftsIntegrationServiceContract/GetEventsInAreaResponse" +
            "")]
        Coats.Crafts.Gateway.CraftsIntegrationService.CraftsEvent[] GetEventsInArea(int publicationId, string longitude, string latitude, int radius, System.DateTime currentDate, bool useMilesAsUnit, int maxResults);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICoatsCraftsIntegrationServiceContract/InsertRetailerEvent", ReplyAction="http://tempuri.org/ICoatsCraftsIntegrationServiceContract/InsertRetailerEventResp" +
            "onse")]
        Coats.Crafts.Gateway.CraftsIntegrationService.CraftsEvent InsertRetailerEvent(Coats.Crafts.Gateway.CraftsIntegrationService.CraftsEvent evt);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICoatsCraftsIntegrationServiceContract/InsertEvent", ReplyAction="http://tempuri.org/ICoatsCraftsIntegrationServiceContract/InsertEventResponse")]
        Coats.Crafts.Gateway.CraftsIntegrationService.CraftsEvent InsertEvent(Coats.Crafts.Gateway.CraftsIntegrationService.CraftsEvent evt, string lat, string lng);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICoatsCraftsIntegrationServiceContract/InsertScrapbookItem", ReplyAction="http://tempuri.org/ICoatsCraftsIntegrationServiceContract/InsertScrapbookItemResp" +
            "onse")]
        Coats.Crafts.Gateway.CraftsIntegrationService.ScrapbookItem InsertScrapbookItem(Coats.Crafts.Gateway.CraftsIntegrationService.ScrapbookItem item);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICoatsCraftsIntegrationServiceContract/GetScrapbookItemsByUser" +
            "", ReplyAction="http://tempuri.org/ICoatsCraftsIntegrationServiceContract/GetScrapbookItemsByUser" +
            "Response")]
        Coats.Crafts.Gateway.CraftsIntegrationService.ScrapbookItem[] GetScrapbookItemsByUser(string userID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICoatsCraftsIntegrationServiceContract/GetScrapbookItem", ReplyAction="http://tempuri.org/ICoatsCraftsIntegrationServiceContract/GetScrapbookItemRespons" +
            "e")]
        Coats.Crafts.Gateway.CraftsIntegrationService.ScrapbookItem GetScrapbookItem(System.Guid itemID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICoatsCraftsIntegrationServiceContract/TryDeleteScrapbookItem", ReplyAction="http://tempuri.org/ICoatsCraftsIntegrationServiceContract/TryDeleteScrapbookItemR" +
            "esponse")]
        bool TryDeleteScrapbookItem(System.Guid itemID, string userID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICoatsCraftsIntegrationServiceContract/InsertShoppingListItem", ReplyAction="http://tempuri.org/ICoatsCraftsIntegrationServiceContract/InsertShoppingListItemR" +
            "esponse")]
        Coats.Crafts.Gateway.CraftsIntegrationService.ShoppingListItem InsertShoppingListItem(Coats.Crafts.Gateway.CraftsIntegrationService.ShoppingListItem item);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICoatsCraftsIntegrationServiceContract/TryDeleteShoppingListIt" +
            "em", ReplyAction="http://tempuri.org/ICoatsCraftsIntegrationServiceContract/TryDeleteShoppingListIt" +
            "emResponse")]
        bool TryDeleteShoppingListItem(System.Guid ID, string userID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICoatsCraftsIntegrationServiceContract/TryDeleteShoppingListIt" +
            "emsByProjectName", ReplyAction="http://tempuri.org/ICoatsCraftsIntegrationServiceContract/TryDeleteShoppingListIt" +
            "emsByProjectNameResponse")]
        bool TryDeleteShoppingListItemsByProjectName(string projectName, string userID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICoatsCraftsIntegrationServiceContract/GetShoppingListItems", ReplyAction="http://tempuri.org/ICoatsCraftsIntegrationServiceContract/GetShoppingListItemsRes" +
            "ponse")]
        Coats.Crafts.Gateway.CraftsIntegrationService.ShoppingListItem[] GetShoppingListItems(string userID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICoatsCraftsIntegrationServiceContract/GetShoppingListItem", ReplyAction="http://tempuri.org/ICoatsCraftsIntegrationServiceContract/GetShoppingListItemResp" +
            "onse")]
        Coats.Crafts.Gateway.CraftsIntegrationService.ShoppingListItem GetShoppingListItem(System.Guid itemID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICoatsCraftsIntegrationServiceContract/UpdateShoppingListItemQ" +
            "uantity", ReplyAction="http://tempuri.org/ICoatsCraftsIntegrationServiceContract/UpdateShoppingListItemQ" +
            "uantityResponse")]
        Coats.Crafts.Gateway.CraftsIntegrationService.ShoppingListItem UpdateShoppingListItemQuantity(System.Guid itemID, string username, int alterQuantityBy);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICoatsCraftsIntegrationServiceContract/checkDisplayNameExists", ReplyAction="http://tempuri.org/ICoatsCraftsIntegrationServiceContract/checkDisplayNameExistsR" +
            "esponse")]
        bool checkDisplayNameExists(string displayname);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ICoatsCraftsIntegrationServiceContractChannel : Coats.Crafts.Gateway.CraftsIntegrationService.ICoatsCraftsIntegrationServiceContract, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CoatsCraftsIntegrationServiceContractClient : System.ServiceModel.ClientBase<Coats.Crafts.Gateway.CraftsIntegrationService.ICoatsCraftsIntegrationServiceContract>, Coats.Crafts.Gateway.CraftsIntegrationService.ICoatsCraftsIntegrationServiceContract {
        
        public CoatsCraftsIntegrationServiceContractClient() {
        }
        
        public CoatsCraftsIntegrationServiceContractClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public CoatsCraftsIntegrationServiceContractClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CoatsCraftsIntegrationServiceContractClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CoatsCraftsIntegrationServiceContractClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public Coats.Crafts.Gateway.CraftsIntegrationService.IntegrationServiceRetailer[] GetRetailersAndEventsPaged(int publicationId, int pageSize, int pageNumber, System.DateTime currentDate) {
            return base.Channel.GetRetailersAndEventsPaged(publicationId, pageSize, pageNumber, currentDate);
        }
        
        public Coats.Crafts.Gateway.CraftsIntegrationService.IntegrationServiceRetailer[] GetRetailersAndEventsInArea(int publicationId, string longitude, string latitude, int radius, System.DateTime currentDate, bool useMilesAsUnit, int maxEvents, int maxRetailers, string filterByBrandName) {
            return base.Channel.GetRetailersAndEventsInArea(publicationId, longitude, latitude, radius, currentDate, useMilesAsUnit, maxEvents, maxRetailers, filterByBrandName);
        }
        
        public Coats.Crafts.Gateway.CraftsIntegrationService.IntegrationServiceRetailer[] GetRetailersInArea(int publicationId, string longitude, string latitude, int radius, bool useMilesAsUnit, int maxResults) {
            return base.Channel.GetRetailersInArea(publicationId, longitude, latitude, radius, useMilesAsUnit, maxResults);
        }
        
        public Coats.Crafts.Gateway.CraftsIntegrationService.IntegrationServiceRetailer GetEventsForRetailer(Coats.Crafts.Gateway.CraftsIntegrationService.IntegrationServiceRetailer retailer, System.DateTime currentDate, int maxResults) {
            return base.Channel.GetEventsForRetailer(retailer, currentDate, maxResults);
        }
        
        public Coats.Crafts.Gateway.CraftsIntegrationService.CraftsEvent[] GetEventsInArea(int publicationId, string longitude, string latitude, int radius, System.DateTime currentDate, bool useMilesAsUnit, int maxResults) {
            return base.Channel.GetEventsInArea(publicationId, longitude, latitude, radius, currentDate, useMilesAsUnit, maxResults);
        }
        
        public Coats.Crafts.Gateway.CraftsIntegrationService.CraftsEvent InsertRetailerEvent(Coats.Crafts.Gateway.CraftsIntegrationService.CraftsEvent evt) {
            return base.Channel.InsertRetailerEvent(evt);
        }
        
        public Coats.Crafts.Gateway.CraftsIntegrationService.CraftsEvent InsertEvent(Coats.Crafts.Gateway.CraftsIntegrationService.CraftsEvent evt, string lat, string lng) {
            return base.Channel.InsertEvent(evt, lat, lng);
        }
        
        public Coats.Crafts.Gateway.CraftsIntegrationService.ScrapbookItem InsertScrapbookItem(Coats.Crafts.Gateway.CraftsIntegrationService.ScrapbookItem item) {
            return base.Channel.InsertScrapbookItem(item);
        }
        
        public Coats.Crafts.Gateway.CraftsIntegrationService.ScrapbookItem[] GetScrapbookItemsByUser(string userID) {
            return base.Channel.GetScrapbookItemsByUser(userID);
        }
        
        public Coats.Crafts.Gateway.CraftsIntegrationService.ScrapbookItem GetScrapbookItem(System.Guid itemID) {
            return base.Channel.GetScrapbookItem(itemID);
        }
        
        public bool TryDeleteScrapbookItem(System.Guid itemID, string userID) {
            return base.Channel.TryDeleteScrapbookItem(itemID, userID);
        }
        
        public Coats.Crafts.Gateway.CraftsIntegrationService.ShoppingListItem InsertShoppingListItem(Coats.Crafts.Gateway.CraftsIntegrationService.ShoppingListItem item) {
            return base.Channel.InsertShoppingListItem(item);
        }
        
        public bool TryDeleteShoppingListItem(System.Guid ID, string userID) {
            return base.Channel.TryDeleteShoppingListItem(ID, userID);
        }
        
        public bool TryDeleteShoppingListItemsByProjectName(string projectName, string userID) {
            return base.Channel.TryDeleteShoppingListItemsByProjectName(projectName, userID);
        }
        
        public Coats.Crafts.Gateway.CraftsIntegrationService.ShoppingListItem[] GetShoppingListItems(string userID) {
            return base.Channel.GetShoppingListItems(userID);
        }
        
        public Coats.Crafts.Gateway.CraftsIntegrationService.ShoppingListItem GetShoppingListItem(System.Guid itemID) {
            return base.Channel.GetShoppingListItem(itemID);
        }
        
        public Coats.Crafts.Gateway.CraftsIntegrationService.ShoppingListItem UpdateShoppingListItemQuantity(System.Guid itemID, string username, int alterQuantityBy) {
            return base.Channel.UpdateShoppingListItemQuantity(itemID, username, alterQuantityBy);
        }
        
        public bool checkDisplayNameExists(string displayname) {
            return base.Channel.checkDisplayNameExists(displayname);
        }
    }
}
