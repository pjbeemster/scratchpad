@{
/*
 * 
 * FacetedSearchInput.cshtml
 * ----------
 * Partial to output the faceted content search box. 
 * Seperated out from two views to allow for easy reuse.
 * Must be outputted within form tags.
 * 
 */
}
@using Coats.Crafts.Models;
@using Coats.Crafts.Extensions;
@model Coats.Crafts.Models.FacetedContentBase
@{
    //String formAction = "http://" + Request.Url.Host + Request.Url.LocalPath;
    //String placeholderText = Html.GetResource("SearchWatermark");
    //if (Request.Url.AbsolutePath.Contains("product-explorer"))
    //{ 
    //    placeholderText = Html.GetResource("SearchProductsWatermark");
    //}
    string watermarkId = Request.Url.AbsolutePath.Contains("/explore") ? "SearchProductsWatermark" : "SearchWatermark";
    string placeholderText = Html.GetResource(watermarkId);

    string ticked = String.Empty;
    if (!String.IsNullOrEmpty(Request["fh_ticked"]))
    {
        ticked = "?fh_ticked=" + Request["fh_ticked"];
    }
}

<span class="control-group pull-right searchblock">
	<form action="@ticked" class="fh-filter" method="post">
		@Html.TextBoxFor(m => m.ComponentSection.SearchTerm, new { type = "search", placeholder = placeholderText })
		<input type="image" src="@Url.Content("~/img/input-search-icon.png")" />
		@*
			
		/*
		 * 
		 * Hidden fields required existing logic in the controller to work
		 * 
		 */

		*@
		@Html.HiddenFor(m => m.FredHopperLocation)
		@Html.HiddenFor(m => m.Sort.SortBy)
		@Html.HiddenFor(m => m.Sort.ActiveDiscussions)
		@for (int i = 0; i < Model.ComponentSection.ComponentTypes.Facets.Count; i++)
		{
			@Html.HiddenFor(m => m.ComponentSection.ComponentTypes.Facets[i].Text)
			@Html.HiddenFor(m => m.ComponentSection.ComponentTypes.Facets[i].Value)
			@Html.HiddenFor(m => m.ComponentSection.ComponentTypes.Facets[i].Href)
			@Html.HiddenFor(m => m.ComponentSection.ComponentTypes.Facets[i].Selected)
		}
	</form>
</span>