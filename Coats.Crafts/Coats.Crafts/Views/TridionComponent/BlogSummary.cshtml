@using DD4T.ContentModel;
@using Coats.Crafts.Extensions;

@model IComponentPresentation

@{
    Layout = null;
    var fields = @Model.Component.Fields;
    var componentid = @Model.Component.Id;
    MvcHtmlString summary = Model.Component.Fields.ContainsKey("summary") ? Model.Component.Fields["summary"].Value.ResolveRichText() : MvcHtmlString.Empty;
	string url = Url.Content(Model.Component.Url.AddApplicationRoot());
    int UGCcount = 0;
}

<section class="component blog-summary">
    <div class="row-fluid">
        <div class="span6 half-at-tablet">
        @if (fields.ContainsKey("thumb"))
        {
            @Html.Image(fields["thumb"], new { @class = "shaded" })
        }
        </div>
        <div class="span6 half-at-tablet">
            <h1>@Html.GetResource("FromTheBlog")</h1>
            <h2>@fields["title"].Value</h2>
			<span class="authorwrap">@Html.addAuthor("", false)</span>
            <div class="content">
                <p>@summary</p>
                <p><a href="@url" class="read-full">@Html.GetResource("ReadFullArticle")</a></p>
            </div>
            
            @{
				/* HTML Action returns MVC Html String */
                MvcHtmlString commentCount = Html.Action("CommentCount", "Comments", new { compid = componentid });

                if (int.TryParse(commentCount.ToString(), out UGCcount))
                {
                    if (UGCcount > 0)
                    {
                    <ul class="actions">
                        <li>
                            <a href="@(url)#comments" title="" class="icon comments">@UGCcount.ToString()</a>
                        </li>
                    </ul>
                    }
                }
			}

        </div>
    </div>
</section>