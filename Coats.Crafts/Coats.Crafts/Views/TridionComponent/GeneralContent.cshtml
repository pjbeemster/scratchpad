@using DD4T.ContentModel;
@using DD4T.Mvc.Html;

@model IComponentPresentation

@{
    Layout = null;
    var fields = @Model.Component.Fields;
 }
<section class="two-col-article">
	@Html.Partial("~/Views/Partials/HeaderSimple.cshtml", Model)

	@if (fields.ContainsKey("image"))
	{
	<div class="row-fluid">
		<div class="span12">
			<div class="inline-image">
				@Html.Image(fields["image"].LinkedComponentValues[0], new { @class = "shaded" })
				<ul class="actions">
					<li>@{Html.RenderPartial("~/Views/Scrapbook/AddScrapbookItemForm.cshtml", fields["image"].LinkedComponentValues[0]);}</li>
				</ul>
				</div>
		</div>
	</div>
	}
                
	@if (fields.ContainsKey("body"))
	{
	<div class="row-fluid">
		<div class="span12">
			@fields["body"].Value.ResolveRichText()
		</div>
	</div>
	}
                
    @if (fields.ContainsKey("sections"))
    {
		var totalSections = fields["sections"].EmbeddedValues.Count;
		for (int i = 0; i < totalSections; i++)
        {
			var comp = fields["sections"].EmbeddedValues[i];
			
            if (comp.ContainsKey("sectiontitle"))
            {
                var titl = comp["sectiontitle"].Value;
                <div class="row-fluid">
					<div class="span12">
						<h2>@Html.Raw(titl)</h2>
					</div>
                </div>
            }
                
            if (comp.ContainsKey("sectioncontent"))
            {
                var sections = comp["sectioncontent"].EmbeddedValues.Count;
                <div class="row-fluid">
					@for (int i1 = 0; i1 < sections; i1++)
					{
						var content = comp["sectioncontent"].EmbeddedValues[i1];
					
						// If else makes sure we only ever have two content blocks in a row
						if (content.ContainsKey("image"))
						{
							<div class="span6">
								<div class="inline-image">
									@Html.Image(content["image"].LinkedComponentValues[0], new { @class = "shaded" })
									<ul class="actions">
										<li>@{Html.RenderPartial("~/Views/Scrapbook/AddScrapbookItemForm.cshtml", content["image"].LinkedComponentValues[0]);}</li>
									</ul>
								</div>
							</div>
						}
						else if (content.ContainsKey("content"))
						{
							<div class="span6">
								@content["content"].Value.ResolveRichText()
							</div>
						}
					}
                </div>
            }
        }
    }
</section>