@using DD4T.ContentModel;
@using DD4T.Mvc.Html;
@using System.Security.Principal;
@using Coats.Crafts.Models;

@model Component
@{

	Layout = null;

	var divClass = ViewData.ContainsKey("divClass") ? ViewData["divClass"] : string.Empty;
	var ulClass = ViewData.ContainsKey("ulClass") ? ViewData["ulClass"] : string.Empty;
	string[] hideFields = ViewData.ContainsKey("hideFields") ? (string[])ViewData["hideFields"].ToString().Split(',') : null;
	bool isBold = ViewData.ContainsKey("isBold") ? (bool)ViewData["isBold"] : false;
	string seperator = ViewData.ContainsKey("seperator") ? (string)ViewData["seperator"] : "-";

	var hideTutorial = hideFields != null && Array.IndexOf(hideFields, "tutorial_number") > -1 ? true : false;
	var hideProject = hideFields != null && Array.IndexOf(hideFields, "project_number") > -1 ? true : false;

	var tutorial_number = Model.Fields.ContainsKey("tutorial_number") && !hideTutorial ? Model.Fields["tutorial_number"].Value : null;
	var project_number = Model.Fields.ContainsKey("project_number") && !hideProject ? Model.Fields["project_number"].Value : null;

    string brands = hideFields != null && Array.IndexOf(hideFields, "brands") > -1 ? null : Html.FacetKeyword(Model, "brands");
    string techniques = hideFields != null && Array.IndexOf(hideFields, "techniques") > -1 ? null : Html.FacetKeyword(Model, "techniques");
    string craftingtimes = hideFields != null && Array.IndexOf(hideFields, "craftingtimes") > -1 ? null : Html.FacetKeyword(Model, "craftingtimes");
    string enduses = hideFields != null && Array.IndexOf(hideFields, "enduses") > -1 ? null : Html.FacetKeyword(Model, "enduses");
    string themes = hideFields != null && Array.IndexOf(hideFields, "themes") > -1 ? null : Html.FacetKeyword(Model, "themes");
    string designers = hideFields != null && Array.IndexOf(hideFields, "designers") > -1 ? null : Html.FacetKeyword(Model, "designers");
    string skilllevels = hideFields != null && Array.IndexOf(hideFields, "skilllevels") > -1 ? null : Html.FacetKeyword(Model, "skilllevels");

	var facetCt = 0;
	if (!String.IsNullOrEmpty(tutorial_number))
	{
		facetCt = facetCt + 1;
	}
	if (!String.IsNullOrEmpty(project_number))
	{
		facetCt = facetCt + 1;
	}
	if (!String.IsNullOrEmpty(brands))
	{
		facetCt = facetCt + 1;
	}
	if (!String.IsNullOrEmpty(techniques))
	{
		facetCt = facetCt + 1;
	}
	if (!String.IsNullOrEmpty(craftingtimes))
	{
		facetCt = facetCt + 1;
	}
	if (!String.IsNullOrEmpty(enduses))
	{
		facetCt = facetCt + 1;
	}
	if (!String.IsNullOrEmpty(themes))
	{
		facetCt = facetCt + 1;
	}
	if (!String.IsNullOrEmpty(designers))
	{
		facetCt = facetCt + 1;
	}
	if (!String.IsNullOrEmpty(themes))
	{
		facetCt = facetCt + 1;
	}    
}

@if (facetCt > 0)
{
	<div class="@divClass">
		<ul class="@ulClass">
			@if (!String.IsNullOrEmpty(tutorial_number))
   {
				<li><strong>@Html.GetResource("Tutorial"):</strong> @tutorial_number</li>
   }
			@if (!String.IsNullOrEmpty(project_number))
   {
				<li><strong>@Html.GetResource("ProjectNumber"):</strong> @project_number</li>
   }

			@if (!String.IsNullOrEmpty(brands))
   {
				<li class="js-facetitem-brands">@LabelHelper.DisplayBoldLabel(isBold, @Html.GetResource("brands"), @brands, seperator)</li>
   }
						
			@if (!String.IsNullOrEmpty(craftingtimes))
   {
				<li>@LabelHelper.DisplayBoldLabel(isBold, @Html.GetResource("CraftingTime"), @craftingtimes, seperator)
				</li>
   }
			@if (!String.IsNullOrEmpty(designers))
   {
				<li>@LabelHelper.DisplayBoldLabel(isBold, @Html.GetResource("crafts2edesigner"), @designers, seperator)</li>
   }
			@if (!String.IsNullOrEmpty(enduses))
   {
				<li>@LabelHelper.DisplayBoldLabel(isBold, @Html.GetResource("EndUse"), @enduses, seperator)</li>
   }

			@if (!String.IsNullOrEmpty(skilllevels))
   {
				<li>@LabelHelper.DisplayBoldLabel(isBold, @Html.GetResource("Complexity"), @skilllevels, seperator)</li>
   }

			@if (!String.IsNullOrEmpty(techniques))
   {
				<li class="js-facetitem-technique">@LabelHelper.DisplayBoldLabel(isBold, @Html.GetResource("Technique"), @techniques, seperator)</li>
   }
					
			@if (!String.IsNullOrEmpty(themes))
   {
				<li>@LabelHelper.DisplayBoldLabel(isBold, @Html.GetResource("themes"), @themes, seperator)</li>
   }
		</ul>
	</div>
	}