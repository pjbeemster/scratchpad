@model Coats.Crafts.Controllers.Registration
           
@{
    Layout = null;
    var returnurl = ViewBag.ReturnUrl;
    bool rememberChk = ViewBag.RememberMe != null ? ViewBag.RememberMe : false;

    string user = "";

    if (User != null)
    {
        user = "Logged in as " + User.Identity.Name;
    }
}

<div>@user</div>

@if (Model.RegistrationForm.RegistrationStatus == null)
{
    // LOGIN
    using (Html.BeginForm("Index", "registration", FormMethod.Post, new { @class = "form reg-form" }))
    {
        if (!string.IsNullOrEmpty(Html.ValidationMessage("LoginFailed").ToString()))
        {
            <div>@Html.ValidationMessage("LoginFailed")</div>
        }
        
        <div class="row">
            <div class="span5">
                @Html.LabelFor(model => model.LoginForm.EmailAddress, new { @class = "not_required" })
                @Html.EditorFor(model => model.LoginForm.EmailAddress)
                @Html.ValidationMessageFor(model => model.LoginForm.EmailAddress)
            </div>
            <div class="span11 no-margin">
                @Html.LabelFor(model => model.LoginForm.Password, new { @class = "not_required" })
                @Html.EditorFor(model => model.LoginForm.Password)
                @Html.ValidationMessageFor(model => model.LoginForm.Password)
            </div>
            <input type="submit" class="btn primary" name="submitLogin" value="@Html.GetResource("Login")" id="btnLogin"/>

        </div>
    }

}

@using (Html.BeginForm("Index", "registration", FormMethod.Post, new { @class = "login-form " }))
{
    <div>
        Register - first example is register in 4 steps using form submit at each step

        @if (Model.RegistrationForm.RegistrationStatus == null)
        {
            using (Html.BeginForm("Index", "registration", FormMethod.Post, new { @class = "form reg-form" }))
            {   
            <h1>@*pageHeader*@</h1>
            
            <div class="row">
                <div class="span16">
                <p>@*pageIntro*@</p>
                    <p class="small">
                       @*Labels.RequiredField*@
                    </p>
                        @Html.ValidationSummary(true)
                </div>
            </div>

            <fieldset>
                <legend>@*Labels.PersonalDetails*@</legend>
                <div class="row">
                    <div class="span8">
                        @Html.LabelFor(m => m.RegistrationForm.CustomerDetails.EmailAddress, new { @class = "not_required" })
                        @Html.TextBoxFor(m => m.RegistrationForm.CustomerDetails.EmailAddress, new { maxlength = 255, @Value = "" })
                        @Html.ValidationMessageFor(m => m.RegistrationForm.CustomerDetails.EmailAddress)
                    </div>
                </div>

                <div class="row">
                    <div class="span8">
                    @Html.LabelFor(m => m.RegistrationForm.CustomerDetails.FirstName, new { @class = "not_required" })
                    @Html.TextBoxFor(m => m.RegistrationForm.CustomerDetails.FirstName, new { maxlength = 255, @Value = "" })
                    @Html.ValidationMessageFor(m => m.RegistrationForm.CustomerDetails.FirstName)
                    </div>

                    <div class="span8">
                    @Html.LabelFor(m => m.RegistrationForm.CustomerDetails.LastName, new { @class = "not_required" })
                    @Html.TextBoxFor(m => m.RegistrationForm.CustomerDetails.LastName, new { maxlength = 255, @Value = "" })
                    @Html.ValidationMessageFor(m => m.RegistrationForm.CustomerDetails.LastName)
                    </div>
                </div>
                        
                <div class="row">
                    <div class="span8">
                        @Html.LabelFor(m => m.RegistrationForm.CustomerDetails.DisplayName, new { @class = "not_required" })
                        @Html.TextBoxFor(m => m.RegistrationForm.CustomerDetails.DisplayName, new { maxlength = 255, @Value = "" })
                        @Html.ValidationMessageFor(m => m.RegistrationForm.CustomerDetails.DisplayName)
                    </div>
                </div>
   
                <div class="row">
                    <div class="span8">
                        @Html.LabelFor(m => m.RegistrationForm.CustomerDetails.Password, new { @class = "not_required" })
                        @Html.EditorFor(m => m.RegistrationForm.CustomerDetails.Password, new { maxlength = 255, @Value = "" })
                        @Html.ValidationMessageFor(m => m.RegistrationForm.CustomerDetails.Password)
                    </div>
                    <div class="span8">
                        @Html.LabelFor(m => m.RegistrationForm.CustomerDetails.VerifyPassword, new { @class = "not_required" })
                        @Html.EditorFor(m => m.RegistrationForm.CustomerDetails.VerifyPassword, new { maxlength = 255, @Value = "" })
                        @Html.ValidationMessageFor(m => m.RegistrationForm.CustomerDetails.VerifyPassword)
                    </div>
                </div>

            </fieldset>

            <input type="hidden" name="step" value="@Model.RegistrationForm.RegistrationStatus" />

            <input name="submitRegister" class="btn primary" type="submit" id="submit" value="@Html.GetResource("Register")" />

            }
        }

        @if (Model.RegistrationForm.RegistrationStatus == "Registered")
        {
            using (Html.BeginForm("Index", "registration", FormMethod.Post, new { @class = "form reg-form" }))
            {

                Html.ValidationSummary(true);
            
            <fieldset>Debug 1
                <div class="row">
                    <div class="span8">
                        @Html.LabelFor(m => m.RegistrationForm.AddressDetails.Postcode, new { @class = "not_required" })
                        @Html.TextBoxFor(m => m.RegistrationForm.AddressDetails.Postcode, new { maxlength = 255 })
                        @Html.ValidationMessageFor(m => m.RegistrationForm.AddressDetails.Postcode)
                        <input type="submit" name="submitFindPostCode" class="btn primary" value="Find" id="btnRegisterStep2"/>                            
                    </div>

                    @if (Model.RegistrationForm.PostCodeMapUrl != null)
                    {
                        <img src="@Model.RegistrationForm.PostCodeMapUrl" />
                    }
                
                </div>
                <div class="row">
                    <div class="span8">
                        Your preferred crafts
                        I am interested in...

                        <div class="span16">
                            @Html.CheckBoxList("CraftType", Model.RegistrationForm.CraftTypeList, new HtmlListInfo(HtmlTag.vertical_columns, 4, new { @class = "check-horz" }))
                        </div>
                    </div>
                </div>

                <input type="hidden" name="step" value="@Model.RegistrationForm.RegistrationStatus" />

            </fieldset>
            
            <a href="#">No thanks, take me to the content >></a><br />
            
            <input type="submit" name="submitCompleteRegistration" class="btn primary" value="Complete Registration" id="btnRegisterStep2"/>
            }
        }

        @if (Model.RegistrationForm.RegistrationStatus == "Profile")
        {
            using (Html.BeginForm("Index", "registration", FormMethod.Post, new { @class = "form reg-form" }))
            {
            <fieldset>
            <div class="row">
                <div class="span8">
                    @Html.LabelFor(m => m.RegistrationForm.CustomerDetails.About, new { @class = "not_required" })
                    @Html.TextBoxFor(m => m.RegistrationForm.CustomerDetails.About, new { maxlength = 255, @Value = "" })
                    @Html.ValidationMessageFor(m => m.RegistrationForm.CustomerDetails.About)
                </div>
            </div> 
            </fieldset>
            
            <a href="#">No thanks, take me to the content >></a><br />
            <input type="submit" name="submitProfile" class="btn primary" value="Add profile" id="btnRegisterStep2"/>
            }
        }
        
        @if (Model.RegistrationForm.RegistrationStatus == "Complete")
        {
            <h1>COMPLETE</h1>
        }      
        
        <br /> <hr /><br />
    </div>

}

    
@using (Html.BeginForm("Index", "registration", FormMethod.Post, new { @class = "login-form " }))
{
    // REGISTER
    
    <div> Register - second example is a single form that will be split up by JavaScript

        @if (Model.RegistrationForm.RegistrationStatus == null)
        {
            using (Html.BeginForm("Index", "registration", FormMethod.Post, new { @class = "form reg-form" }))
            {   
            <h1>@*pageHeader*@</h1>
            
            <div class="row">
                <div class="span16">
                <p>@*pageIntro*@</p>
                    <p class="small">
                       @*Labels.RequiredField*@
                    </p>
                    @Html.ValidationSummary(true)
                </div>
            </div>

            <fieldset>
                <legend>@*Labels.PersonalDetails*@</legend>
                <div class="row">
                    <div class="span8">
                        @Html.LabelFor(m => m.RegistrationForm.CustomerDetails.EmailAddress, new { @class = "not_required" })
                        @Html.TextBoxFor(m => m.RegistrationForm.CustomerDetails.EmailAddress, new { maxlength = 255, @Value = "" })
                        @Html.ValidationMessageFor(m => m.RegistrationForm.CustomerDetails.EmailAddress)
                    </div>
                </div>

                <div class="row">
                    <div class="span8">
                    @Html.LabelFor(m => m.RegistrationForm.CustomerDetails.FirstName, new { @class = "not_required" })
                    @Html.TextBoxFor(m => m.RegistrationForm.CustomerDetails.FirstName, new { maxlength = 255, @Value = "" })
                    @Html.ValidationMessageFor(m => m.RegistrationForm.CustomerDetails.FirstName)
                    </div>

                    <div class="span8">
                    @Html.LabelFor(m => m.RegistrationForm.CustomerDetails.LastName, new { @class = "not_required" })
                    @Html.TextBoxFor(m => m.RegistrationForm.CustomerDetails.LastName, new { maxlength = 255, @Value = "" })
                    @Html.ValidationMessageFor(m => m.RegistrationForm.CustomerDetails.LastName)
                    </div>
                </div>
                        
                <div class="row">
                    <div class="span8">
                        @Html.LabelFor(m => m.RegistrationForm.CustomerDetails.DisplayName, new { @class = "not_required" })
                        @Html.TextBoxFor(m => m.RegistrationForm.CustomerDetails.DisplayName, new { maxlength = 255, @Value = "" })
                        @Html.ValidationMessageFor(m => m.RegistrationForm.CustomerDetails.DisplayName)
                    </div>
                </div>
   
                <div class="row">
                    <div class="span8">
                        @Html.LabelFor(m => m.RegistrationForm.CustomerDetails.Password, new { @class = "not_required" })
                        @Html.EditorFor(m => m.RegistrationForm.CustomerDetails.Password, new { maxlength = 255, @Value = "" })
                        @Html.ValidationMessageFor(m => m.RegistrationForm.CustomerDetails.Password)
                    </div>
                    <div class="span8">
                        @Html.LabelFor(m => m.RegistrationForm.CustomerDetails.VerifyPassword, new { @class = "not_required" })
                        @Html.EditorFor(m => m.RegistrationForm.CustomerDetails.VerifyPassword, new { maxlength = 255, @Value = "" })
                        @Html.ValidationMessageFor(m => m.RegistrationForm.CustomerDetails.VerifyPassword)
                    </div>
                </div>
            </fieldset>

            
            <fieldset>
                <div class="row">
                    <div class="span8">
                        Your preferred crafts
                        I am interested in...

                        <div class="span16">
                            @Html.CheckBoxList("CraftType", Model.RegistrationForm.CraftTypeList, new HtmlListInfo(HtmlTag.vertical_columns, 4, new { @class = "check-horz" }))
                        </div>
                    </div>
                </div>
            </fieldset>
             
            <fieldset>
            <div class="row">
                <div class="span8">
                    @Html.LabelFor(m => m.RegistrationForm.CustomerDetails.About, new { @class = "not_required" })
                    @Html.TextBoxFor(m => m.RegistrationForm.CustomerDetails.About, new { maxlength = 255, @Value = "" })
                    @Html.ValidationMessageFor(m => m.RegistrationForm.CustomerDetails.About)
                </div>
            </div> 
            </fieldset>
            
            
            <div class="row">
                <div class="span8">
                    @Html.LabelFor(m => m.RegistrationForm.AddressDetails.Postcode, new { @class = "not_required" })
                    @Html.TextBoxFor(m => m.RegistrationForm.AddressDetails.Postcode, new { maxlength = 255 })
                    @Html.ValidationMessageFor(m => m.RegistrationForm.AddressDetails.Postcode)                           
                </div>

                @if (Model.RegistrationForm.PostCodeMapUrl != null)
                {
                    <img src="@Model.RegistrationForm.PostCodeMapUrl" />
                }
            </div>
            
            
            <a href="#">No thanks, take me to the content >></a><br />
            
            <input type="submit" name="submitFullProfile" class="btn primary" value="Add profile" id="btnRegisterStep2"/>
            }
        }
        
        @if (Model.RegistrationForm.RegistrationStatus == "Complete")
        {
            <h1>COMPLETE</h1>
        }

    </div>

}
