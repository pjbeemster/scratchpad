@using DD4T.ContentModel;
@using DD4T.Mvc.Html;
@using System.Security.Principal;
@using Coats.Crafts.Models;
@using Coats.Crafts.Configuration;
@using Coats.Crafts.ControllerHelpers;
@using Coats.Crafts.HtmlHelpers;

@model UserProfile
           
@*model IComponentPresentation*@
           
@{
    //Layout = null;
    //var fields = @Model.Component.Fields;
    //var componentid = @Model.Component.Id;
}

    @Html.Partial("~/Views/Partials/CrumbsLight.cshtml")

    <div class="row-fluid">
	    <div class="span12">
            <h1 class="border-bottom">@*(fields.ContainsKey("title") ? fields["title"].Value : string.Empty)*@</h1>
         </div>
    </div>

    @*{
    Html.RenderAction("Index", "Profile");
}*@

@*using (Html.BeginForm("Index", "Profile", FormMethod.Post, new { @class = "sign-up ", @id = "profile" }))*@

@using (Html.BeginForm())
{
	<div class="row-fluid">
		<div class="span5">
			<fieldset>
				<span class="control-group">
                    <label>@Html.LabelFor(model => model.CustomerDetails.FirstName, new { @class = "required" })</label>
                    @Html.TextBoxFor(model => model.CustomerDetails.FirstName, new { maxlength = 100 })
                    @Html.ValidationMessageFor(model => model.CustomerDetails.FirstName)
                </span>
                <span class="control-group">
					<label>@Html.LabelFor(model => model.CustomerDetails.LastName, new { @class = "required" })</label>
					@Html.TextBoxFor(model => model.CustomerDetails.LastName, new { maxlength = 100 })
                    @Html.ValidationMessageFor(model => model.CustomerDetails.LastName)
				</span>
				<span class="control-group">
					<label>@Html.LabelFor(model => model.CustomerDetails.DisplayName, new { @class = "required" })</label>
					@Html.TextBoxFor(model => model.CustomerDetails.DisplayName, new { maxlength = 100 })
                    @Html.ValidationMessageFor(model => model.CustomerDetails.DisplayName)
				</span>
				<span class="control-group">
					<label>@Html.LabelFor(model => model.CustomerDetails.EmailAddress)</label>
                    @Model.CustomerDetails.EmailAddress
					@*Html.TextBoxFor(model => model.CustomerDetails.EmailAddress, new { maxlength = 255 })*@
                    @*Html.ValidationMessageFor(model => model.CustomerDetails.EmailAddress)*@
				</span>
            </fieldset>
            <fieldset>
                <span class="control-group">
					<label>@Html.LabelFor(model => model.AddressDetails.Postcode, new { @class = "not_required" })</label>
					@Html.TextBoxFor(model => model.AddressDetails.Postcode, new { maxlength = 10 })
                    @Html.ValidationMessageFor(model => model.AddressDetails.Postcode)
					<div id="geolocation-canvas" class="span12">	
					</div>
				</span>
			</fieldset>
            </div>
		<div class="span1">
		</div>
		<div class="span5">
            <fieldset>
				<span class="control-group">
					<label>@Html.LabelFor(m => m.CurrentPassword, new { @class = "not_required" })<!--Current password--></label>
                    @Html.EditorFor(m => m.CurrentPassword, new { maxlength = 255, @Value = "", @class = "span12", @placeholder = "Password" })
                    @Html.ValidationMessageFor(m => m.CurrentPassword)
                    <span class="help-inline">@Html.ValidationMessage("CurrentPasswordIncorrect")</span>
					<p><a href="#" title="">Forgotten your password?</a></p>
				</span>
				<span class="control-group">
					<label>@Html.LabelFor(m => m.NewPassword, new { @class = "not_required" })<!--New password--></label>
                    @Html.EditorFor(m => m.NewPassword, new { maxlength = 255, @Value = "", @class = "span12"})
                    @Html.ValidationMessageFor(m => m.NewPassword)
				</span>
				<span class="control-group">
					@Html.LabelFor(m => m.VerifyNewPassword, new { @class = "not_required" })
                    @Html.EditorFor(m => m.VerifyNewPassword, new { maxlength = 255, @Value = "", @class = "span12", @placeholder = "Confirm password" })
                    @Html.ValidationMessageFor(m => m.VerifyNewPassword)
                    <span class="help-inline">@Html.ValidationMessage("RegistrationErrorVerifyPassword")</span>
				</span>
			</fieldset>
			<fieldset>
				<span class="control-group">
					<label>@Html.LabelFor(model => model.CustomerDetails.About, new { @class = "not_required" })</label>
					@Html.TextAreaFor(model => model.CustomerDetails.About, new { maxlength = 255 })
				</span>
			</fieldset>
			<fieldset>
				<legend>@Html.LabelFor(model => model.CraftTypeList, new { @class = "not_required" })</legend>
				<span class="control-group">
                    @Html.CheckBoxList("CraftType", Model.CraftTypeList, new HtmlListInfo(HtmlTag.vertical_columns, 4, new { @class = "check-horz" }))
				</span>
			</fieldset>
			<fieldset>
				<legend>@Html.LabelFor(model => model.EmailNewsletter, new { @class = "not_required" })</legend>
				<span class="control-group">
                    @foreach (var item in Model.EmailNewsletter)
                    {
                        string selectedNewsletter = "";
                        if (item.Selected == true)
                        {
                            selectedNewsletter = "checked";
                        }
                        <input type="radio" name="email-newsletter" id="email-newsletter-@item.Text" value="@item.Value" @selectedNewsletter /><label for="email-newsletter-@item.Text">@item.Text</label>
                    }
				</span>
			</fieldset>
			<fieldset>
				<legend>@Html.LabelFor(model => model.ProfileVisible, new { @class = "not_required" })</legend>
				<span class="control-group">
                    @foreach (var item in Model.ProfileVisible)
                    {
                        string selectedProfile = "";
                        if (item.Selected == true)
                        {
                            selectedProfile = "checked";
                        }

                        <input type="radio" name="visibile-profile" id="visibile-profile-@item.Text" value="@item.Value" @selectedProfile/><label for="visibile-profile-@item.Text">@item.Text</label>
                    }
				</span>
			</fieldset>
		</div>
	</div>
	<div class="row-fluid">
		<div class="span12 text-right">
			<input type="hidden" name="profile-lat" id="profile-lat" value="" />
			<input type="hidden" name="profile-long" id="profile-long" value="" />
			<button class="btn purple">@Html.GetResource("UpdateProfile")</button>
		</div>
	</div>
}
</section>


        