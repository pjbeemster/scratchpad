@using DD4T.ContentModel;
@using DD4T.Mvc.Html;
@using System.Security.Principal;
@using Coats.Crafts.Models;
@using System.Text;
@using Coats.Crafts.Extensions;
@using Coats.Crafts.Configuration;

@model IComponentPresentation

@{
    Layout = null;

    var project = @Model.Component.Fields;
    var componentid = @Model.Component.Id;
    var fields = @Model.Component.Fields;
    var banner = fields.ContainsKey("banner") ? fields["banner"] : null;
    var title = fields.ContainsKey("title") ? fields["title"].Value : null;
    //var projectNumber = fields.ContainsKey("project_number") ? fields["project_number"].Value : "";
    var instructions = fields.ContainsKey("instructions") ? fields["instructions"] : null;

    string instructionLink = String.Empty;
    string targetVal = String.Empty;

	var currentUrl = Request.Url.AbsolutePath;
    
    if (instructions != null)
    {
        if (instructions.LinkedComponentValues != null)
        {
			var downloadLink = Request.Url.GetLeftPart(UriPartial.Authority) + instructions.LinkedComponentValues[0].GetResolvedUrl();

			instructionLink = User.Identity.IsAuthenticated ? downloadLink : Url.Content("~/registration/index.html?action=download&itemLink=" + downloadLink + "&ReturnUrl=" + currentUrl + "&Project=" + Url.Encode(fields["title"].Value));
            targetVal = User.Identity.IsAuthenticated ? "_blank" : "_self";
        }
    }

    IField thumb = fields.ContainsKey("thumb") ? fields["thumb"] : null;
    MvcHtmlString summary = fields.ContainsKey("summary") ? fields["summary"].Value.ResolveRichText() : MvcHtmlString.Empty;

    var brand = fields.ContainsKey("brand") ? fields["brand"] : null;

    string logo = string.Empty;

    if (brand != null)
    {
        if (brand.Keywords[0].MetadataFields.ContainsKey("logo"))
        {
            logo = Html.Image(brand.Keywords[0].MetadataFields["logo"]).ToString();
        }
    }

	//string brands = Html.FacetKeyword(Model.Component, "brands");
	//string techniques = Html.FacetKeyword(Model.Component, "techniques");
	//string craftingtimes = Html.FacetKeyword(Model.Component, "craftingtimes");
	//string enduses = Html.FacetKeyword(Model.Component, "enduses");
	//string themes = Html.FacetKeyword(Model.Component, "themes");
}
@Html.Partial("~/Views/Partials/CrumbsLight.cshtml")
<section class="sidebar-layout" itemscope itemtype="http://schema.org/Article">
    @Html.Partial("~/Views/Partials/HeaderSimple.cshtml")
    @Html.Partial("~/Views/Partials/AuthorRating.cshtml", Model)
    <div class="row-fluid sidebar-layout project-intro">
        <div class="span7">
            @Html.Banner(banner, "inline")

            @if (fields.ContainsKey("body"))
            {
                foreach (var body in fields["body"].Values)
                {
                    @body.ResolveRichText()
                }
            }
            <footer>
                <ul class="actions">
                    <li>@{Html.RenderPartial("~/Views/Scrapbook/AddScrapbookItemForm.cshtml", Model.Component);}</li>
                </ul>
            </footer>
        </div>
        <div class="span4 pull-right">
            <aside>
                @Html.Partial("~/Views/Partials/FacetItemDisplay.cshtml", Model.Component, new ViewDataDictionary { { "isBold", true }, { "seperator", ":" } })
                @if (instructionLink != "")
                {
                    <div class="downloadcontainer">
                        <a href="@instructionLink" target="@targetVal" class="btn pink download download-project">@Html.GetResource("DownloadProjectInstructions")</a>
                    </div>
                }

                @if (fields.ContainsKey("products"))
                {
                    <div>
                        <h2>@Html.GetResource("RequiredProducts"):</h2>
                        <ul class="required">
                            @foreach (var product in fields["products"].EmbeddedValues) 
                            {
                                var productComponent = product["product"].LinkedComponentValues[0];

                                var id = productComponent.Id;
                                var quantity = product["quantity"].Value;
                                var projectName = title;
                                var redirectUrl = Request.Url.ToString();
                                var link = "";
                                if (!String.IsNullOrEmpty(productComponent.Url))
                                {
                                    link = Url.Content(productComponent.GetResolvedUrl().AddApplicationRoot());
                                }
                                
                                var productName = productComponent.Fields["title"].Value;
                                var description = productName;

                                if (!String.IsNullOrEmpty(link))
                                {
                                    description = "<a href=" + link + " title=" + productName + ">" + productName + "</a>";
                                }

                                <li>
                                    @if(!WebConfiguration.Current.DisableWishList){
                                        if (User.Identity.IsAuthenticated)
                                        {
                                            using (Html.BeginForm("additem", "shoppinglist", FormMethod.Post, new { rel = "ajax", data_done_event = "inserted-shoppinglist" }))
                                            {
											    <input type="hidden" name="name" value="@(fields["title"].Value)" />
                                                <input type="hidden" name="id" value="@(id)" />
                                                <input type="hidden" name="quantity" value="@(quantity)" />
                                                <input type="hidden" name="project" value="@(projectName)" />
                                                <input type="hidden" name="redirectUrl" value="@(Request.Url.ToString())" />
                                                <button type="submit" class="icon add-to-shopping-list" data-toggle="tooltip" title="@Html.GetResource("AddToShoppingList")">@Html.GetResource("AddToShoppingList")</button>
										    }
									    }
									    else
									    {
										    // Append item details to query string to pass through to login form - login form then adds these as hidden values
										    StringBuilder linker = new StringBuilder("~/registration/index.html");
										    linker.Append("?action=addtoshoppinglist");
										    linker.Append("&tcm-id=" + Url.Encode(id));
										    linker.Append("&quantity=" + Url.Encode(quantity));
										    linker.Append("&project=" + Url.Encode(projectName));
										    linker.Append("&name=" + Url.Encode(fields["title"].Value));
										    linker.Append("&ReturnUrl=" + Url.Encode(Request.Url.AbsolutePath.ToString()));
	
                                            <a href="@Url.Content(linker.ToString())" class="icon add-to-shopping-list" data-toggle="tooltip" title="@Html.GetResource("AddToShoppingList")" rel="nofollow">@Html.GetResource("AddToShoppingList")</a>
									    }
                                    }
                                    @(quantity) x @(Html.Raw(description))
                                </li>
							}
                        </ul>
                    </div>
                }
            </aside>
        </div>
    </div>
</section>
