@using DD4T.ContentModel;

@model IComponent

@{
    Layout = null;

    int rows = 0;
    
    // Away to check any rows have been created
    bool any = false;

    // Somewhere to stick rows
    Dictionary<string, List<string>> cells = new Dictionary<string, List<string>>();
            
    // The different field names
    List<string> characteristicFields = new List<string>() { "description", "composition", "colours", "width", "length", "size", "units", "package", "delivery" };   
    
    // Any characteristics defined?
    if (Model.Fields.ContainsKey("characteristics"))
    {
        FieldSet characteristics = Model.Fields["characteristics"].EmbeddedValues[0] as FieldSet;

        // Check which
        characteristicFields.ForEach(c =>
        {
            if (characteristics != null && characteristics.ContainsKey(c))
            {
                any = true;

                // The largest number of values sets the row loop
                int valueCount = characteristics[c].Values.Count;
                if (valueCount > rows)
                    rows = valueCount;

                List<string> cell = new List<string>();
                foreach(var value in characteristics[c].Values)
                {
                    cell.Add(String.Format("<td>{0}</td>", value));
                }

                if (cell.Count > 0)
                    cells.Add(c, cell);                
            }    
        });                           
    }
        
    if (any)
    {
        <div class="row-fluid divider">
	        <div class="span12"></div>
        </div>
        <div class="row-fluid product-info">
	        <div class="span12 overflower">
		        <table class="table">
			        <tr class="header">
				         @if (cells.ContainsKey("description")) { <th>@Html.GetResource("ProductDescription")</th> }
				         @if (cells.ContainsKey("composition")) {<th>@Html.GetResource("Composition")</th> }
				         @if (cells.ContainsKey("colours")) {<th>@Html.GetResource("ColourTableTitle")</th> }
    				     @if (cells.ContainsKey("width")) { <th>@Html.GetResource("Width")</th> }
				         @if (cells.ContainsKey("length")) { <th>@Html.GetResource("Length")</th> }
				         @if (cells.ContainsKey("size")) { <th>@Html.GetResource("ProductSize")</th> }
				         @if (cells.ContainsKey("units")) { <th>@Html.GetResource("UnitsPerPack")</th> }
				         @if (cells.ContainsKey("package")) { <th>@Html.GetResource("PackageType")</th> }                                                                                                                                                                                                                                                                                                                                                                             
				         @if (cells.ContainsKey("delivery")) { <th>@Html.GetResource("DeliveryTableTitle")</th> }   
			        </tr>
                    @for (int i = 0; i < rows; i++)
                    {
                        <tr>                         
                            @foreach (var c in characteristicFields)
                            {
                                // Did we create any cells for this field?
                                if (cells.ContainsKey(c))
                                {
                                    // Makes sure there was enough values as the max
                                    if ((i + 1) <= cells[c].Count)
                                    {
                                        @Html.Raw(cells[c][i])
                                    }
                                    else
                                    {
                                        @Html.Raw("<td>&nbsp;</td>")
                                    }
                                }
                            }
                        </tr>
                    }		            
		        </table> 
	        </div>
        </div>
    }
}