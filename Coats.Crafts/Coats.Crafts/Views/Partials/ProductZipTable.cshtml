@using DD4T.ContentModel;

@model IComponent

@{
    Layout = null;
    var fields = @Model.Fields;
    var promo = fields;
    int rows = 0;
 }
<div class="row-fluid divider">
	<div class="span12"></div>
</div>
 <div class="row-fluid product-info">
	<div class="span12 overflower">
        <table class="table">
			<tr class="header">
				<th>@Html.GetResource("ZipTitle")</th>
				<th>@Html.GetResource("ArticleTicket")</th>
				<th>@Html.GetResource("ProductSize")</th>
			</tr>
        @if (fields.ContainsKey("model"))
        {
            rows = fields["model"].LinkedComponentValues.Count;
            for (int i = 0; i < rows; i++)
            {
                var ccomp = fields["model"].LinkedComponentValues[i];

                string tic = ccomp.Fields.ContainsKey("article_ticket") ? ccomp.Fields["article_ticket"].Value : string.Empty;
                string nam = ccomp.Fields.ContainsKey("title") ? ccomp.Fields["title"].Value : string.Empty;
                string wid = ccomp.Fields.ContainsKey("width") ? ccomp.Fields["width"].Value : string.Empty;
                string len = ccomp.Fields.ContainsKey("length") ? ccomp.Fields["length"].Value : string.Empty;
                string detail = string.Empty;
                
                if (!string.IsNullOrEmpty(wid) && !string.IsNullOrEmpty(len))
                {
                    detail = len + " x " + wid;
                }
            <tr>
                <td>@nam</td>
                <td>@tic</td>
                <td>@detail</td>
            </tr>
            
            }
        }
  
          </table> 
    </div>
</div>