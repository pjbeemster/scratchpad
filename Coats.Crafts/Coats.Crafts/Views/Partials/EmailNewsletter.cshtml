@model Coats.Crafts.Models.EmailNewsletter
@using Coats.Crafts.Configuration;
@using Coats.Crafts.Extensions;
@{
    Layout = null;

	// If the user is logged in, we need to update their profile.
	// If the user is not logged in, we want them to register.
	// Logged in : Profile/EmailNewsletterSettings
	// Logged out: Registration/EmailNewsletterSignup
	String actionUrl = Url.Content("~/registration/index.html");
	String controllerName = Model.IsLoggedIn ? "Profile" : "Registration";
	String actionName = Model.IsLoggedIn ? "EmailNewsletterSettings" : "Index";
    String submitText = Model.IsLoggedIn ? Html.GetResource("Update") : Html.GetResource("SignUp");
	FormMethod method = Model.IsLoggedIn ? FormMethod.Post : FormMethod.Get;

    String profileUrl = Url.Content(WebConfiguration.Current.MyProfile.AddApplicationRoot());
}

<div class="span3 newsletter">
    <div class="inner">
        <h3>@Html.GetResource("EmailNewsletter")</h3>
        @if (Model.IsLoggedIn)
        {
 @*           using (Html.BeginForm(actionName, controllerName, method, new { @class = "form-horizontal update js-newsletter-form" }))
            {
                @Html.HiddenFor(m => m.IsLoggedIn);
                @Html.HiddenFor(m => m.EmailAddress);*@

@*                for (int i = 0; i < Model.Techniques.Count; i++)
                {
                    <span class="control-group"> 
                        @Html.CheckBoxFor(m => m.Techniques[i].Selected, new { name = "mailshot[" + Model.Techniques[i].Text.ToLower() + "]" })
                        @Html.LabelFor(m => m.Techniques[i].Selected, Model.Techniques[i].Text)
                    </span>
                    @Html.HiddenFor(m => m.Techniques[i].Text);
                    @Html.HiddenFor(m => m.Techniques[i].Value);
                }*@
                <span class="control-group">
					@*<input type="hidden" name="redirectUrl" value="@Request.Url.AbsolutePath" />*@
                    @*<input type="hidden" name="ReturnUrl" value="@Request.Url.AbsolutePath" />*@
                    @*<input type="submit" class="btn brown" name="EmailNewsletterSubmit" value="@submitText" />*@
                    <a href="@profileUrl" class="btn brown profile ajax">@submitText</a>
                </span>
            //}
        }
        else
        {
			using (Html.BeginForm(null, null, method, new { @class = "form-horizontal regsign", @action = actionUrl }))
            {
                @Html.HiddenFor(m => m.IsLoggedIn);

@*                for (int i = 0; i < Model.Techniques.Count; i++)
                {
                    <span class="control-group hidden-phone"> 
                        @Html.CheckBoxFor(m => m.Techniques[i].Selected, new { name = "mailshot[" + Model.Techniques[i].Text.ToLower() + "]" })
                        @Html.LabelFor(m => m.Techniques[i].Selected, Model.Techniques[i].Text)
                    </span>
                    @Html.HiddenFor(m => m.Techniques[i].Text);
                    @Html.HiddenFor(m => m.Techniques[i].Value);
                }*@
                <span class="control-group stacked wide">
                    @Html.TextBoxFor(m => m.EmailAddress, new { placeholder = @Html.GetResource("YourEmailNewsletter") })
                </span>
                <span class="control-group stacked thin">
					<input type="hidden" name="ReturnUrl" value="@Request.Url.AbsolutePath" />
                    <input type="submit" class="btn brown" name="EmailNewsletterSubmit" value="@submitText" />
                </span>
            }
        }

    </div>
</div>
